{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleFileUpload = async e => {\n    const uploadedFiles = Array.from(e.target.files);\n    setFiles(uploadedFiles);\n  };\n  const handleChooseFile = async () => {\n    try {\n      if ('showDirectoryPicker' in window) {\n        // Select folder and read all files inside it\n        const dirHandle = await window.showDirectoryPicker();\n        const fileHandles = [];\n        async function getFilesFromDirectory(directoryHandle) {\n          for await (const entry of directoryHandle.values()) {\n            if (entry.kind === \"file\") {\n              fileHandles.push(await entry.getFile());\n            } else if (entry.kind === \"directory\") {\n              await getFilesFromDirectory(entry); // Recursively get files from subdirectories\n            }\n          }\n        }\n        await getFilesFromDirectory(dirHandle);\n        setFiles(fileHandles);\n      } else {\n        // Fallback for older browsers\n        const input = document.createElement(\"input\");\n        input.type = \"file\";\n        input.multiple = true;\n        input.onchange = event => handleFileUpload(event);\n        input.click();\n      }\n    } catch (err) {\n      console.error(\"File selection cancelled\", err);\n    }\n  };\n  const handleUpload = () => {\n    if (files.length === 0) {\n      alert(\"No files selected!\");\n      return;\n    }\n    alert(\"Files uploaded successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"navbar-title\",\n          children: \"HauntAI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload Files or Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"file-input\",\n          onClick: handleChooseFile,\n          children: \"Choose File or Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Selected Files:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: file.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Max file size: 1GB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","files","setFiles","handleFileUpload","e","uploadedFiles","Array","from","target","handleChooseFile","window","dirHandle","showDirectoryPicker","fileHandles","getFilesFromDirectory","directoryHandle","entry","values","kind","push","getFile","input","document","createElement","type","multiple","onchange","event","click","err","console","error","handleUpload","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","file","index","name","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const uploadedFiles = Array.from(e.target.files);\r\n    setFiles(uploadedFiles);\r\n  };\r\n\r\n  const handleChooseFile = async () => {\r\n    try {\r\n      if ('showDirectoryPicker' in window) {\r\n        // Select folder and read all files inside it\r\n        const dirHandle = await window.showDirectoryPicker();\r\n        const fileHandles = [];\r\n        \r\n        async function getFilesFromDirectory(directoryHandle) {\r\n          for await (const entry of directoryHandle.values()) {\r\n            if (entry.kind === \"file\") {\r\n              fileHandles.push(await entry.getFile());\r\n            } else if (entry.kind === \"directory\") {\r\n              await getFilesFromDirectory(entry); // Recursively get files from subdirectories\r\n            }\r\n          }\r\n        }\r\n\r\n        await getFilesFromDirectory(dirHandle);\r\n        setFiles(fileHandles);\r\n      } else {\r\n        // Fallback for older browsers\r\n        const input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.multiple = true;\r\n        input.onchange = (event) => handleFileUpload(event);\r\n        input.click();\r\n      }\r\n    } catch (err) {\r\n      console.error(\"File selection cancelled\", err);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (files.length === 0) {\r\n      alert(\"No files selected!\");\r\n      return;\r\n    }\r\n    alert(\"Files uploaded successfully!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-content\">\r\n          <h1 className=\"navbar-title\">HauntAI</h1>\r\n        </div>\r\n      </nav>\r\n      <div className=\"upload-card\">\r\n        <div className=\"upload-section\">\r\n          <h3>Upload Files or Folder</h3>\r\n          <button className=\"file-input\" onClick={handleChooseFile}>\r\n            Choose File or Folder\r\n          </button>\r\n          {files.length > 0 && (\r\n            <div className=\"file-list\">\r\n              <h4>Selected Files:</h4>\r\n              <ul>\r\n                {files.map((file, index) => (\r\n                  <li key={index}>{file.name}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          <p>Max file size: 1GB</p>\r\n          <button className=\"upload-button\" onClick={handleUpload}>Upload</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}