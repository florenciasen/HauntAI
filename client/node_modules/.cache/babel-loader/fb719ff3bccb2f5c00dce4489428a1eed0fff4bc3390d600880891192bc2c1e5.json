{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [folderStructure, setFolderStructure] = useState({});\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\",\n    analysisResults: []\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [fileProgress, setFileProgress] = useState({});\n  const [analysisProgress, setAnalysisProgress] = useState({});\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\n\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n      setFolderStructure({});\n      console.log(`Selected ${files.length} files for upload`);\n    }\n  };\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    // Convert FileList to Array\n    const fileArray = Array.from(files);\n\n    // Build folder structure\n    const structure = {};\n    fileArray.forEach(file => {\n      // Get the relative path (folder structure)\n      const path = file.webkitRelativePath || \"\";\n      if (!path) return;\n\n      // Split path into parts\n      const parts = path.split('/');\n\n      // Start with the root of our structure\n      let current = structure;\n\n      // Navigate through the path parts (except the filename at the end)\n      for (let i = 0; i < parts.length - 1; i++) {\n        const part = parts[i];\n        // Create folder if it doesn't exist\n        if (!current[part]) {\n          current[part] = {\n            __isFolder: true,\n            __name: part,\n            __path: parts.slice(0, i + 1).join('/')\n          };\n        }\n        // Move to this folder\n        current = current[part];\n      }\n\n      // Add the file to the current folder\n      const fileName = parts[parts.length - 1];\n      current[fileName] = {\n        __isFile: true,\n        __name: fileName,\n        __path: path,\n        __fileObj: file,\n        __size: file.size\n      };\n    });\n    console.log(\"Built folder structure:\", structure);\n\n    // Filter to get only .js and .py files\n    const jsAndPyFiles = fileArray.filter(file => file.name.endsWith(\".js\") || file.name.endsWith(\".py\"));\n    if (jsAndPyFiles.length > 0) {\n      setSelectedFiles(jsAndPyFiles);\n      setFolderStructure(structure);\n      setFolderUploaded(true);\n      setFileUploaded(false);\n      console.log(`Selected ${jsAndPyFiles.length} files from folder`);\n    } else {\n      console.warn(\"No .js or .py files found in folder\");\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\n      setFolderUploaded(false);\n    }\n  };\n  const uploadChunk = async (file, start, chunk, sessionId) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"sessionId\", sessionId);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n\n    // Add the relative path for folder structure\n    if (file.webkitRelativePath) {\n      formData.append(\"filepath\", file.webkitRelativePath);\n    }\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\n    }\n    const result = await response.json();\n    console.log(`Chunk upload response:`, result);\n\n    // Update progress for this specific file\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: progress // Update progress for this file\n    }));\n    return result;\n  };\n\n  // Function to analyze files with Gemini API\n  const analyzeFilesWithGemini = async (savedFiles, uploadFolder) => {\n    setIsAnalyzing(true);\n    console.log(\"Starting Gemini analysis for files:\", savedFiles);\n    try {\n      // Initialize analysis progress for each file\n      const initialProgress = {};\n      savedFiles.forEach(filePath => {\n        const fileName = filePath.split('/').pop();\n        initialProgress[fileName] = 0;\n      });\n      setAnalysisProgress(initialProgress);\n\n      // Send request to analyze files\n      const analysisResponse = await fetch(\"http://localhost:5000/analyze-files\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          files: savedFiles,\n          folder: uploadFolder,\n          analysisPrompt: \"Analyze this code and identify any security vulnerabilities, hardcoded credentials, or sensitive data. Also suggest improvements for code quality and performance. Structure your response with clear sections for issues found and recommendations.\"\n        })\n      });\n      if (!analysisResponse.ok) {\n        throw new Error(\"Failed to analyze files with Gemini API\");\n      }\n      const analysisResult = await analysisResponse.json();\n      console.log(\"Analysis completed:\", analysisResult);\n      setUploadStatus(prev => ({\n        ...prev,\n        analyzed: true,\n        analysisResults: analysisResult.analyzed_files || []\n      }));\n      alert(\"Analysis complete! You can now view the results.\");\n    } catch (error) {\n      console.error(\"Analysis error:\", error);\n      alert(\"Error analyzing files: \" + error.message);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      console.warn(\"No files selected for upload\");\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    const sessionId = Date.now().toString();\n    console.log(`Starting upload session: ${sessionId}`);\n    try {\n      for (const file of selectedFiles) {\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\n        let start = 0;\n        while (start < file.size) {\n          const chunk = file.slice(start, start + CHUNK_SIZE);\n          await uploadChunk(file, start, chunk, sessionId);\n          start += CHUNK_SIZE;\n        }\n        // Once the file is uploaded, update progress to 100%\n        setFileProgress(prevProgress => ({\n          ...prevProgress,\n          [file.name]: 100\n        }));\n        console.log(`Completed uploading file: ${file.name}`);\n      }\n      console.log(\"All files uploaded, finalizing...\");\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId,\n          files: selectedFiles.map(f => ({\n            filename: f.name,\n            size: f.size,\n            filepath: f.webkitRelativePath || f.name\n          }))\n        })\n      });\n      if (!finalizeResponse.ok) throw new Error(\"Failed to finalize upload\");\n      const result = await finalizeResponse.json();\n      console.log(\"Upload finalized:\", result);\n      setUploadStatus(prevStatus => ({\n        ...prevStatus,\n        uploaded: true,\n        analyzed: false,\n        message: result.message,\n        analysisResults: []\n      }));\n      setIsUploading(false);\n      setIsAnalyzing(true);\n      alert(\"Upload berhasil! Now starting analysis...\");\n\n      // Start analyzing files with Gemini after upload completes\n      await analyzeFilesWithGemini(result.saved_files, result.folder);\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setUploadStatus({\n        uploaded: false,\n        analyzed: false,\n        message: error.message\n      });\n      alert(\"Terjadi kesalahan saat mengupload file.\");\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const downloadAnalysis = filename => {\n    // Fungsi untuk mendownload file hasil analisis\n    const url = `http://localhost:5000/download-analysis?filename=${filename}`;\n    window.open(url, \"_blank\"); // Membuka file di tab baru untuk di-download\n  };\n\n  // Recursive component to render folder structure\n  const renderFolderStructure = (structure, level = 0, parentPath = \"\") => {\n    if (!structure || Object.keys(structure).length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"folder-tree\",\n      style: {\n        paddingLeft: level > 0 ? \"20px\" : \"0\"\n      },\n      children: Object.entries(structure).map(([key, value]) => {\n        // Skip special properties\n        if (key.startsWith(\"__\")) return null;\n        const isFolder = value.__isFolder;\n        const name = value.__name || key;\n        const path = value.__path || (parentPath ? `${parentPath}/${key}` : key);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: isFolder ? \"folder-item\" : \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-name\",\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"5px\",\n              backgroundColor: isFolder ? \"#f0f0f0\" : \"transparent\",\n              borderRadius: \"4px\",\n              marginBottom: \"3px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: isFolder ? \"📁\" : \"📄\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), !isFolder && fileProgress[name] !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: \"10px\",\n                fontSize: \"12px\",\n                color: \"#666\"\n              },\n              children: [isUploading ? `Uploading: ${fileProgress[name]}%` : \"\", isAnalyzing ? \"Analyzing...\" : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), !isFolder && uploadStatus.analyzed && uploadStatus.analysisResults.includes(name) && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => downloadAnalysis(name),\n              style: {\n                marginLeft: \"10px\",\n                padding: \"2px 8px\",\n                backgroundColor: \"#4285f4\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\"\n              },\n              children: \"View Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), isFolder && renderFolderStructure(value, level + 1, path)]\n        }, path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper function to count files and folders\n  const countContents = structure => {\n    let files = 0;\n    let folders = 0;\n    const traverse = obj => {\n      if (!obj) return;\n      Object.values(obj).forEach(value => {\n        if (value && typeof value === 'object') {\n          if (value.__isFolder) {\n            folders++;\n            traverse(value);\n          } else if (value.__isFile) {\n            files++;\n          }\n        }\n      });\n    };\n    traverse(structure);\n    return {\n      files,\n      folders\n    };\n  };\n\n  // Get folder statistics\n  const folderStats = countContents(folderStructure);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File or Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maksimum ukuran file: 1GB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${folderUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileUpload,\n              disabled: folderUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${fileUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              webkitdirectory: \"\",\n              directory: \"\",\n              multiple: true,\n              onChange: handleFolderUpload,\n              disabled: fileUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        disabled: isUploading || isAnalyzing,\n        children: isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing with AI...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), folderUploaded && Object.keys(folderStructure).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Struktur Folder:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"10px\",\n          fontSize: \"14px\",\n          color: \"#666\"\n        },\n        children: [folderStats.folders, \" folders, \", folderStats.files, \" files\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), renderFolderStructure(folderStructure)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this), fileUploaded && selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"8px\",\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: \"8px\"\n            },\n            children: [\"\\uD83D\\uDCC4 \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this), isUploading && fileProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              fontSize: \"12px\"\n            },\n            children: [\"Uploading: \", fileProgress[file.name], \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 19\n          }, this), isAnalyzing && analysisProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              fontSize: \"12px\"\n            },\n            children: \"Analyzing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 19\n          }, this), uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => downloadAnalysis(file.name),\n            style: {\n              marginLeft: \"10px\",\n              padding: \"2px 8px\",\n              backgroundColor: \"#4285f4\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\"\n            },\n            children: \"View Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"fNyXN/gO8KffIOP4yMCynS+iGxA=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","folderStructure","setFolderStructure","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","analysisResults","isUploading","setIsUploading","isAnalyzing","setIsAnalyzing","fileProgress","setFileProgress","analysisProgress","setAnalysisProgress","CHUNK_SIZE","handleFileUpload","event","files","target","length","Array","from","console","log","handleFolderUpload","fileArray","structure","forEach","file","path","webkitRelativePath","parts","split","current","i","part","__isFolder","__name","__path","slice","join","fileName","__isFile","__fileObj","__size","size","jsAndPyFiles","filter","name","endsWith","warn","alert","uploadChunk","start","chunk","sessionId","formData","FormData","append","response","fetch","method","body","ok","Error","statusText","result","json","progress","Math","min","round","prevProgress","analyzeFilesWithGemini","savedFiles","uploadFolder","initialProgress","filePath","pop","analysisResponse","headers","JSON","stringify","folder","analysisPrompt","analysisResult","prev","analyzed_files","error","handleUploadToBackend","Date","now","toString","finalizeResponse","map","f","filename","filepath","prevStatus","saved_files","downloadAnalysis","url","window","open","renderFolderStructure","level","parentPath","Object","keys","className","style","paddingLeft","children","entries","key","value","startsWith","isFolder","display","alignItems","padding","backgroundColor","borderRadius","marginBottom","marginRight","_jsxFileName","lineNumber","columnNumber","undefined","marginLeft","fontSize","color","includes","onClick","border","cursor","countContents","folders","traverse","obj","values","folderStats","type","multiple","onChange","disabled","webkitdirectory","directory","index","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [folderStructure, setFolderStructure] = useState({});\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\",\r\n    analysisResults: [],\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [fileProgress, setFileProgress] = useState({});\r\n  const [analysisProgress, setAnalysisProgress] = useState({});\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n      setFolderStructure({});\r\n      console.log(`Selected ${files.length} files for upload`);\r\n    }\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (!files || files.length === 0) return;\r\n    \r\n    // Convert FileList to Array\r\n    const fileArray = Array.from(files);\r\n    \r\n    // Build folder structure\r\n    const structure = {};\r\n    \r\n    fileArray.forEach(file => {\r\n      // Get the relative path (folder structure)\r\n      const path = file.webkitRelativePath || \"\";\r\n      if (!path) return;\r\n      \r\n      // Split path into parts\r\n      const parts = path.split('/');\r\n      \r\n      // Start with the root of our structure\r\n      let current = structure;\r\n      \r\n      // Navigate through the path parts (except the filename at the end)\r\n      for (let i = 0; i < parts.length - 1; i++) {\r\n        const part = parts[i];\r\n        // Create folder if it doesn't exist\r\n        if (!current[part]) {\r\n          current[part] = { \r\n            __isFolder: true,\r\n            __name: part,\r\n            __path: parts.slice(0, i + 1).join('/')\r\n          };\r\n        }\r\n        // Move to this folder\r\n        current = current[part];\r\n      }\r\n      \r\n      // Add the file to the current folder\r\n      const fileName = parts[parts.length - 1];\r\n      current[fileName] = {\r\n        __isFile: true,\r\n        __name: fileName,\r\n        __path: path,\r\n        __fileObj: file,\r\n        __size: file.size\r\n      };\r\n    });\r\n    \r\n    console.log(\"Built folder structure:\", structure);\r\n    \r\n    // Filter to get only .js and .py files\r\n    const jsAndPyFiles = fileArray.filter(file => \r\n      file.name.endsWith(\".js\") || file.name.endsWith(\".py\")\r\n    );\r\n    \r\n    if (jsAndPyFiles.length > 0) {\r\n      setSelectedFiles(jsAndPyFiles);\r\n      setFolderStructure(structure);\r\n      setFolderUploaded(true);\r\n      setFileUploaded(false);\r\n      console.log(`Selected ${jsAndPyFiles.length} files from folder`);\r\n    } else {\r\n      console.warn(\"No .js or .py files found in folder\");\r\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk, sessionId) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"sessionId\", sessionId);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n    \r\n    // Add the relative path for folder structure\r\n    if (file.webkitRelativePath) {\r\n      formData.append(\"filepath\", file.webkitRelativePath);\r\n    }\r\n\r\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\r\n\r\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\r\n    }\r\n    const result = await response.json();\r\n    console.log(`Chunk upload response:`, result);\r\n\r\n    // Update progress for this specific file\r\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\r\n    setFileProgress((prevProgress) => ({\r\n      ...prevProgress,\r\n      [file.name]: progress, // Update progress for this file\r\n    }));\r\n\r\n    return result;\r\n  };\r\n\r\n  // Function to analyze files with Gemini API\r\n  const analyzeFilesWithGemini = async (savedFiles, uploadFolder) => {\r\n    setIsAnalyzing(true);\r\n    console.log(\"Starting Gemini analysis for files:\", savedFiles);\r\n    \r\n    try {\r\n      // Initialize analysis progress for each file\r\n      const initialProgress = {};\r\n      savedFiles.forEach(filePath => {\r\n        const fileName = filePath.split('/').pop();\r\n        initialProgress[fileName] = 0;\r\n      });\r\n      setAnalysisProgress(initialProgress);\r\n      \r\n      // Send request to analyze files\r\n      const analysisResponse = await fetch(\"http://localhost:5000/analyze-files\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          files: savedFiles,\r\n          folder: uploadFolder,\r\n          analysisPrompt: \"Analyze this code and identify any security vulnerabilities, hardcoded credentials, or sensitive data. Also suggest improvements for code quality and performance. Structure your response with clear sections for issues found and recommendations.\",\r\n        }),\r\n      });\r\n\r\n      if (!analysisResponse.ok) {\r\n        throw new Error(\"Failed to analyze files with Gemini API\");\r\n      }\r\n\r\n      const analysisResult = await analysisResponse.json();\r\n      console.log(\"Analysis completed:\", analysisResult);\r\n\r\n      setUploadStatus(prev => ({\r\n        ...prev,\r\n        analyzed: true,\r\n        analysisResults: analysisResult.analyzed_files || [],\r\n      }));\r\n\r\n      alert(\"Analysis complete! You can now view the results.\");\r\n    } catch (error) {\r\n      console.error(\"Analysis error:\", error);\r\n      alert(\"Error analyzing files: \" + error.message);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      console.warn(\"No files selected for upload\");\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const sessionId = Date.now().toString();\r\n    console.log(`Starting upload session: ${sessionId}`);\r\n\r\n    try {\r\n      for (const file of selectedFiles) {\r\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\r\n        let start = 0;\r\n        while (start < file.size) {\r\n          const chunk = file.slice(start, start + CHUNK_SIZE);\r\n          await uploadChunk(file, start, chunk, sessionId);\r\n          start += CHUNK_SIZE;\r\n        }\r\n        // Once the file is uploaded, update progress to 100%\r\n        setFileProgress((prevProgress) => ({\r\n          ...prevProgress,\r\n          [file.name]: 100,\r\n        }));\r\n        console.log(`Completed uploading file: ${file.name}`);\r\n      }\r\n\r\n      console.log(\"All files uploaded, finalizing...\");\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          sessionId,\r\n          files: selectedFiles.map(f => ({\r\n            filename: f.name,\r\n            size: f.size,\r\n            filepath: f.webkitRelativePath || f.name,\r\n          })),\r\n        }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) throw new Error(\"Failed to finalize upload\");\r\n\r\n      const result = await finalizeResponse.json();\r\n      console.log(\"Upload finalized:\", result);\r\n\r\n      setUploadStatus(prevStatus => ({\r\n        ...prevStatus,\r\n        uploaded: true,\r\n        analyzed: false,\r\n        message: result.message,\r\n        analysisResults: [],\r\n      }));\r\n      \r\n      setIsUploading(false);\r\n      setIsAnalyzing(true);\r\n      \r\n      alert(\"Upload berhasil! Now starting analysis...\");\r\n      \r\n      // Start analyzing files with Gemini after upload completes\r\n      await analyzeFilesWithGemini(result.saved_files, result.folder);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      setUploadStatus({\r\n        uploaded: false,\r\n        analyzed: false,\r\n        message: error.message,\r\n      });\r\n      alert(\"Terjadi kesalahan saat mengupload file.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const downloadAnalysis = (filename) => {\r\n    // Fungsi untuk mendownload file hasil analisis\r\n    const url = `http://localhost:5000/download-analysis?filename=${filename}`;\r\n    window.open(url, \"_blank\"); // Membuka file di tab baru untuk di-download\r\n  };\r\n\r\n  // Recursive component to render folder structure\r\n  const renderFolderStructure = (structure, level = 0, parentPath = \"\") => {\r\n    if (!structure || Object.keys(structure).length === 0) return null;\r\n    \r\n    return (\r\n      <ul className=\"folder-tree\" style={{ paddingLeft: level > 0 ? \"20px\" : \"0\" }}>\r\n        {Object.entries(structure).map(([key, value]) => {\r\n          // Skip special properties\r\n          if (key.startsWith(\"__\")) return null;\r\n          \r\n          const isFolder = value.__isFolder;\r\n          const name = value.__name || key;\r\n          const path = value.__path || (parentPath ? `${parentPath}/${key}` : key);\r\n          \r\n          return (\r\n            <li key={path} className={isFolder ? \"folder-item\" : \"file-item\"}>\r\n              <div className=\"item-name\" style={{ \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                padding: \"5px\",\r\n                backgroundColor: isFolder ? \"#f0f0f0\" : \"transparent\",\r\n                borderRadius: \"4px\",\r\n                marginBottom: \"3px\"\r\n              }}>\r\n                <span style={{ marginRight: \"5px\" }}>\r\n                  {isFolder ? \"📁\" : \"📄\"}\r\n                </span>\r\n                <span>{name}</span>\r\n                \r\n                {!isFolder && fileProgress[name] !== undefined && (\r\n                  <span style={{ marginLeft: \"10px\", fontSize: \"12px\", color: \"#666\" }}>\r\n                    {isUploading ? `Uploading: ${fileProgress[name]}%` : \"\"}\r\n                    {isAnalyzing ? \"Analyzing...\" : \"\"}\r\n                  </span>\r\n                )}\r\n                \r\n                {!isFolder && uploadStatus.analyzed && uploadStatus.analysisResults.includes(name) && (\r\n                  <button \r\n                    onClick={() => downloadAnalysis(name)} \r\n                    style={{\r\n                      marginLeft: \"10px\",\r\n                      padding: \"2px 8px\",\r\n                      backgroundColor: \"#4285f4\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      borderRadius: \"4px\",\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                  >\r\n                    View Analysis\r\n                  </button>\r\n                )}\r\n              </div>\r\n              \r\n              {isFolder && renderFolderStructure(value, level + 1, path)}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  // Helper function to count files and folders\r\n  const countContents = (structure) => {\r\n    let files = 0;\r\n    let folders = 0;\r\n    \r\n    const traverse = (obj) => {\r\n      if (!obj) return;\r\n      \r\n      Object.values(obj).forEach(value => {\r\n        if (value && typeof value === 'object') {\r\n          if (value.__isFolder) {\r\n            folders++;\r\n            traverse(value);\r\n          } else if (value.__isFile) {\r\n            files++;\r\n          }\r\n        }\r\n      });\r\n    };\r\n    \r\n    traverse(structure);\r\n    return { files, folders };\r\n  };\r\n\r\n  // Get folder statistics\r\n  const folderStats = countContents(folderStructure);\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File or Folder</h2>\r\n        <p className=\"upload-limit\">Maksimum ukuran file: 1GB</p>\r\n        <div className=\"upload-options\">\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${folderUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload File\r\n              <input type=\"file\" multiple onChange={handleFileUpload} disabled={folderUploaded} />\r\n            </label>\r\n          </div>\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${fileUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload Folder\r\n              <input \r\n                type=\"file\" \r\n                webkitdirectory=\"\" \r\n                directory=\"\" \r\n                multiple \r\n                onChange={handleFolderUpload} \r\n                disabled={fileUploaded} \r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"upload-button\" \r\n          onClick={handleUploadToBackend} \r\n          disabled={isUploading || isAnalyzing}\r\n        >\r\n          {isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing with AI...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Show folder structure when folder is uploaded */}\r\n      {folderUploaded && Object.keys(folderStructure).length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>Struktur Folder:</h3>\r\n          <p style={{ marginBottom: \"10px\", fontSize: \"14px\", color: \"#666\" }}>\r\n            {folderStats.folders} folders, {folderStats.files} files\r\n          </p>\r\n          {renderFolderStructure(folderStructure)}\r\n        </div>\r\n      )}\r\n\r\n      {/* Show flat file list when individual files are uploaded */}\r\n      {fileUploaded && selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <ul className=\"file-list\">\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index} style={{ marginBottom: \"8px\", display: \"flex\", alignItems: \"center\" }}>\r\n                <span style={{ marginRight: \"8px\" }}>📄 {file.name}</span>\r\n                {isUploading && fileProgress[file.name] !== undefined && (\r\n                  <span style={{ marginLeft: \"10px\", fontSize: \"12px\" }}>\r\n                    Uploading: {fileProgress[file.name]}%\r\n                  </span>\r\n                )}\r\n                {isAnalyzing && analysisProgress[file.name] !== undefined && (\r\n                  <span style={{ marginLeft: \"10px\", fontSize: \"12px\" }}>\r\n                    Analyzing...\r\n                  </span>\r\n                )}\r\n                {uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && (\r\n                  <button onClick={() => downloadAnalysis(file.name)} style={{\r\n                    marginLeft: \"10px\",\r\n                    padding: \"2px 8px\",\r\n                    backgroundColor: \"#4285f4\",\r\n                    color: \"white\",\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\"\r\n                  }}>\r\n                    View Analysis\r\n                  </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}