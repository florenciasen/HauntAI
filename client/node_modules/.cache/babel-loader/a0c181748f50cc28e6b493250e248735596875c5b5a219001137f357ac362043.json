{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Upload, X, FileUp, FolderUp, AlertCircle } from 'lucide-react';\nimport './FileUploadInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUploadInterface() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState('');\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB chunks\n\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n      setError('');\n    }\n  };\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    const fileList = Array.from(files).filter(file => file.name.endsWith('.js') || file.name.endsWith('.py'));\n    if (fileList.length > 0) {\n      setSelectedFiles(fileList);\n      setFolderUploaded(true);\n      setFileUploaded(false);\n      setError('');\n    } else {\n      setError('No .js or .py files found in the selected folder');\n      setFolderUploaded(false);\n    }\n  };\n  const removeFile = indexToRemove => {\n    setSelectedFiles(prev => prev.filter((_, index) => index !== indexToRemove));\n    setUploadProgress(prev => {\n      const newProgress = {\n        ...prev\n      };\n      delete newProgress[selectedFiles[indexToRemove].name];\n      return newProgress;\n    });\n  };\n  const uploadChunk = async (file, start, chunk, sessionId) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"sessionId\", sessionId);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    const progress = Math.round((start + chunk.size) / file.size * 100);\n    setUploadProgress(prev => ({\n      ...prev,\n      [file.name]: Math.min(progress, 100)\n    }));\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.statusText}`);\n    }\n    return response.json();\n  };\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      setError('Please select files to upload');\n      return;\n    }\n    setIsUploading(true);\n    setError('');\n    const sessionId = Date.now().toString();\n    try {\n      // Initialize progress for all files\n      const initialProgress = {};\n      selectedFiles.forEach(file => {\n        initialProgress[file.name] = 0;\n      });\n      setUploadProgress(initialProgress);\n      for (const file of selectedFiles) {\n        let start = 0;\n        while (start < file.size) {\n          const chunk = file.slice(start, start + CHUNK_SIZE);\n          await uploadChunk(file, start, chunk, sessionId);\n          start += CHUNK_SIZE;\n        }\n      }\n\n      // Finalize upload\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId,\n          files: selectedFiles.map(f => ({\n            filename: f.name,\n            size: f.size\n          }))\n        })\n      });\n      if (!finalizeResponse.ok) {\n        throw new Error(\"Failed to finalize upload\");\n      }\n      setSelectedFiles([]);\n      setFileUploaded(false);\n      setFolderUploaded(false);\n      setUploadProgress({});\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"upload-title\",\n            children: \"HauntAI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"upload-subtitle\",\n            children: \"Upload your files for analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `upload-option ${folderUploaded ? 'disabled' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                multiple: true,\n                onChange: handleFileUpload,\n                className: \"hidden-input\",\n                id: \"file-upload\",\n                disabled: folderUploaded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-upload\",\n                className: \"upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(FileUp, {\n                  className: \"upload-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-text\",\n                  children: \"Upload Files\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-subtext\",\n                  children: \"Drag and drop or click to select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `upload-option ${fileUploaded ? 'disabled' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                webkitdirectory: \"\",\n                directory: \"\",\n                multiple: true,\n                onChange: handleFolderUpload,\n                className: \"hidden-input\",\n                id: \"folder-upload\",\n                disabled: fileUploaded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"folder-upload\",\n                className: \"upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(FolderUp, {\n                  className: \"upload-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-text\",\n                  children: \"Upload Folder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-subtext\",\n                  children: \"Only .js and .py files\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"error-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-list-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Selected Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"file-items\",\n              children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"file-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-item-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-name\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeFile(index),\n                    className: \"remove-file-button\",\n                    disabled: isUploading,\n                    children: /*#__PURE__*/_jsxDEV(X, {\n                      className: \"remove-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), (isUploading || uploadProgress[file.name]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    style: {\n                      width: `${uploadProgress[file.name] || 0}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            disabled: isUploading || selectedFiles.length === 0,\n            className: `upload-button ${isUploading || selectedFiles.length === 0 ? 'disabled' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"button-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), isUploading ? 'Uploading...' : 'Upload Files']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadInterface, \"m11trsRP8n0TkOzFoSCWXIZwCF4=\");\n_c = FileUploadInterface;\nvar _c;\n$RefreshReg$(_c, \"FileUploadInterface\");","map":{"version":3,"names":["React","useState","Upload","X","FileUp","FolderUp","AlertCircle","jsxDEV","_jsxDEV","FileUploadInterface","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","selectedFiles","setSelectedFiles","uploadProgress","setUploadProgress","isUploading","setIsUploading","error","setError","CHUNK_SIZE","handleFileUpload","event","files","target","length","Array","from","handleFolderUpload","fileList","filter","file","name","endsWith","removeFile","indexToRemove","prev","_","index","newProgress","uploadChunk","start","chunk","sessionId","formData","FormData","append","size","progress","Math","round","min","response","fetch","method","body","ok","Error","statusText","json","handleUpload","Date","now","toString","initialProgress","forEach","slice","finalizeResponse","headers","JSON","stringify","map","f","filename","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","id","disabled","htmlFor","webkitdirectory","directory","onClick","style","width","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Upload, X, FileUp, FolderUp, AlertCircle } from 'lucide-react';\r\nimport './FileUploadInterface.css';\r\n\r\nexport default function FileUploadInterface() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadProgress, setUploadProgress] = useState({});\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB chunks\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = event.target.files;\r\n    const fileList = Array.from(files).filter(file => \r\n      file.name.endsWith('.js') || file.name.endsWith('.py')\r\n    );\r\n    \r\n    if (fileList.length > 0) {\r\n      setSelectedFiles(fileList);\r\n      setFolderUploaded(true);\r\n      setFileUploaded(false);\r\n      setError('');\r\n    } else {\r\n      setError('No .js or .py files found in the selected folder');\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const removeFile = (indexToRemove) => {\r\n    setSelectedFiles(prev => prev.filter((_, index) => index !== indexToRemove));\r\n    setUploadProgress(prev => {\r\n      const newProgress = { ...prev };\r\n      delete newProgress[selectedFiles[indexToRemove].name];\r\n      return newProgress;\r\n    });\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk, sessionId) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"sessionId\", sessionId);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n\r\n    const progress = Math.round((start + chunk.size) / file.size * 100);\r\n    setUploadProgress(prev => ({\r\n      ...prev,\r\n      [file.name]: Math.min(progress, 100)\r\n    }));\r\n\r\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload failed: ${response.statusText}`);\r\n    }\r\n\r\n    return response.json();\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      setError('Please select files to upload');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setError('');\r\n    const sessionId = Date.now().toString();\r\n\r\n    try {\r\n      // Initialize progress for all files\r\n      const initialProgress = {};\r\n      selectedFiles.forEach(file => {\r\n        initialProgress[file.name] = 0;\r\n      });\r\n      setUploadProgress(initialProgress);\r\n\r\n      for (const file of selectedFiles) {\r\n        let start = 0;\r\n        while (start < file.size) {\r\n          const chunk = file.slice(start, start + CHUNK_SIZE);\r\n          await uploadChunk(file, start, chunk, sessionId);\r\n          start += CHUNK_SIZE;\r\n        }\r\n      }\r\n\r\n      // Finalize upload\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          sessionId,\r\n          files: selectedFiles.map(f => ({ filename: f.name, size: f.size }))\r\n        }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) {\r\n        throw new Error(\"Failed to finalize upload\");\r\n      }\r\n\r\n      setSelectedFiles([]);\r\n      setFileUploaded(false);\r\n      setFolderUploaded(false);\r\n      setUploadProgress({});\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <div className=\"upload-wrapper\">\r\n        <div className=\"upload-card\">\r\n          <div className=\"upload-header\">\r\n            <h1 className=\"upload-title\">HauntAI</h1>\r\n            <p className=\"upload-subtitle\">Upload your files for analysis</p>\r\n          </div>\r\n\r\n          <div className=\"upload-content\">\r\n            {/* Upload Options */}\r\n            <div className=\"upload-options\">\r\n              {/* File Upload Button */}\r\n              <div className={`upload-option ${folderUploaded ? 'disabled' : ''}`}>\r\n                <input\r\n                  type=\"file\"\r\n                  multiple\r\n                  onChange={handleFileUpload}\r\n                  className=\"hidden-input\"\r\n                  id=\"file-upload\"\r\n                  disabled={folderUploaded}\r\n                />\r\n                <label\r\n                  htmlFor=\"file-upload\"\r\n                  className=\"upload-label\"\r\n                >\r\n                  <FileUp className=\"upload-icon\" />\r\n                  <span className=\"upload-text\">Upload Files</span>\r\n                  <span className=\"upload-subtext\">Drag and drop or click to select</span>\r\n                </label>\r\n              </div>\r\n\r\n              {/* Folder Upload Button */}\r\n              <div className={`upload-option ${fileUploaded ? 'disabled' : ''}`}>\r\n                <input\r\n                  type=\"file\"\r\n                  webkitdirectory=\"\"\r\n                  directory=\"\"\r\n                  multiple\r\n                  onChange={handleFolderUpload}\r\n                  className=\"hidden-input\"\r\n                  id=\"folder-upload\"\r\n                  disabled={fileUploaded}\r\n                />\r\n                <label\r\n                  htmlFor=\"folder-upload\"\r\n                  className=\"upload-label\"\r\n                >\r\n                  <FolderUp className=\"upload-icon\" />\r\n                  <span className=\"upload-text\">Upload Folder</span>\r\n                  <span className=\"upload-subtext\">Only .js and .py files</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Error Message */}\r\n            {error && (\r\n              <div className=\"error-message\">\r\n                <AlertCircle className=\"error-icon\" />\r\n                <span>{error}</span>\r\n              </div>\r\n            )}\r\n\r\n            {/* File List */}\r\n            {selectedFiles.length > 0 && (\r\n              <div className=\"file-list\">\r\n                <div className=\"file-list-header\">\r\n                  <h3>Selected Files</h3>\r\n                </div>\r\n                <ul className=\"file-items\">\r\n                  {selectedFiles.map((file, index) => (\r\n                    <li key={index} className=\"file-item\">\r\n                      <div className=\"file-item-header\">\r\n                        <span className=\"file-name\">{file.name}</span>\r\n                        <button\r\n                          onClick={() => removeFile(index)}\r\n                          className=\"remove-file-button\"\r\n                          disabled={isUploading}\r\n                        >\r\n                          <X className=\"remove-icon\" />\r\n                        </button>\r\n                      </div>\r\n                      {/* Progress Bar */}\r\n                      {(isUploading || uploadProgress[file.name]) && (\r\n                        <div className=\"progress-bar-container\">\r\n                          <div\r\n                            className=\"progress-bar\"\r\n                            style={{ width: `${uploadProgress[file.name] || 0}%` }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n\r\n            {/* Upload Button */}\r\n            <button\r\n              onClick={handleUpload}\r\n              disabled={isUploading || selectedFiles.length === 0}\r\n              className={`upload-button ${isUploading || selectedFiles.length === 0 ? 'disabled' : ''}`}\r\n            >\r\n              <Upload className=\"button-icon\" />\r\n              {isUploading ? 'Uploading...' : 'Upload Files'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}