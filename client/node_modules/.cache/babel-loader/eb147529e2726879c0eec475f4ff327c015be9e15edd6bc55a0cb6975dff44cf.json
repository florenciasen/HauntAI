{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const CHUNK_SIZE = 1024 * 1024; // 1MB per chunk\n\n  const handleFileUpload = event => {\n    const files = Array.from(event.target.files);\n    if (files.length > 0) {\n      setSelectedFiles(files);\n    }\n  };\n  const uploadChunk = async (file, start, fileId) => {\n    const chunk = file.slice(start, start + CHUNK_SIZE);\n    const formData = new FormData();\n    formData.append(\"chunk\", chunk);\n    formData.append(\"fileId\", fileId);\n    formData.append(\"filename\", file.name);\n    try {\n      const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n        method: \"POST\",\n        body: formData\n      });\n      return response.ok;\n    } catch (error) {\n      console.error(\"Error uploading chunk:\", error);\n      return false;\n    }\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    for (const file of selectedFiles) {\n      let start = 0;\n      const fileId = `${file.name}-${Date.now()}`; // Unique ID untuk file\n\n      while (start < file.size) {\n        const success = await uploadChunk(file, start, fileId);\n        if (!success) {\n          alert(\"Upload gagal pada chunk file: \" + file.name);\n          setIsUploading(false);\n          return;\n        }\n        start += CHUNK_SIZE;\n      }\n    }\n    alert(\"Upload selesai!\");\n    setIsUploading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maksimum ukuran file: 1GB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        children: isUploading ? \"Uploading...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"ZO4TQOQouspmTya85INQN5X0gwE=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","isUploading","setIsUploading","CHUNK_SIZE","handleFileUpload","event","files","Array","from","target","length","uploadChunk","file","start","fileId","chunk","slice","formData","FormData","append","name","response","fetch","method","body","ok","error","console","handleUploadToBackend","alert","Date","now","size","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const CHUNK_SIZE = 1024 * 1024; // 1MB per chunk\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    if (files.length > 0) {\r\n      setSelectedFiles(files);\r\n    }\r\n  };\r\n\r\n  const uploadChunk = async (file, start, fileId) => {\r\n    const chunk = file.slice(start, start + CHUNK_SIZE);\r\n    const formData = new FormData();\r\n    formData.append(\"chunk\", chunk);\r\n    formData.append(\"fileId\", fileId);\r\n    formData.append(\"filename\", file.name);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error(\"Error uploading chunk:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n\r\n    for (const file of selectedFiles) {\r\n      let start = 0;\r\n      const fileId = `${file.name}-${Date.now()}`; // Unique ID untuk file\r\n      \r\n      while (start < file.size) {\r\n        const success = await uploadChunk(file, start, fileId);\r\n        if (!success) {\r\n          alert(\"Upload gagal pada chunk file: \" + file.name);\r\n          setIsUploading(false);\r\n          return;\r\n        }\r\n        start += CHUNK_SIZE;\r\n      }\r\n    }\r\n\r\n    alert(\"Upload selesai!\");\r\n    setIsUploading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File</h2>\r\n        <p className=\"upload-limit\">Maksimum ukuran file: 1GB</p>\r\n        <input type=\"file\" multiple onChange={handleFileUpload} />\r\n        <button className=\"upload-button\" onClick={handleUploadToBackend}>\r\n          {isUploading ? \"Uploading...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n      {selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <ul>\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index}>{file.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}