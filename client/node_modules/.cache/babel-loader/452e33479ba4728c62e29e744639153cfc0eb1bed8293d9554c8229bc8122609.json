{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  // Handle folder selection using File System Access API\n  const handleFolderSelection = async () => {\n    try {\n      const handle = await window.showDirectoryPicker(); // Open folder picker\n      const files = [];\n      for await (const entry of handle.values()) {\n        if (entry.kind === \"file\") {\n          const file = await entry.getFile();\n          files.push(file);\n        }\n      }\n      setSelectedFiles(files);\n    } catch (error) {\n      console.error(\"Folder selection failed:\", error);\n    }\n  };\n\n  // Upload selected files to backend\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select a folder before uploading.\");\n      return;\n    }\n    const formData = new FormData();\n    selectedFiles.forEach(file => formData.append(\"files\", file));\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      alert(data.message);\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n      alert(\"Failed to upload files.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HauntAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFolderSelection,\n        children: \"Choose Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Folder Contents:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","selectedFiles","setSelectedFiles","handleFolderSelection","handle","window","showDirectoryPicker","files","entry","values","kind","file","getFile","push","error","console","handleUpload","length","alert","formData","FormData","forEach","append","response","fetch","method","body","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","name","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  // Handle folder selection using File System Access API\r\n  const handleFolderSelection = async () => {\r\n    try {\r\n      const handle = await window.showDirectoryPicker(); // Open folder picker\r\n      const files = [];\r\n\r\n      for await (const entry of handle.values()) {\r\n        if (entry.kind === \"file\") {\r\n          const file = await entry.getFile();\r\n          files.push(file);\r\n        }\r\n      }\r\n\r\n      setSelectedFiles(files);\r\n    } catch (error) {\r\n      console.error(\"Folder selection failed:\", error);\r\n    }\r\n  };\r\n\r\n  // Upload selected files to backend\r\n  const handleUpload = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      alert(\"Please select a folder before uploading.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    selectedFiles.forEach((file) => formData.append(\"files\", file));\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      alert(data.message);\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Failed to upload files.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">\r\n        <h1>HauntAI</h1>\r\n      </nav>\r\n      <div className=\"upload-container\">\r\n        <h3>Upload Folder</h3>\r\n        <button onClick={handleFolderSelection}>Choose Folder</button>\r\n        <div className=\"file-list\">\r\n          <h4>Folder Contents:</h4>\r\n          {selectedFiles.map((file, index) => (\r\n            <div key={index} className=\"file-item\">\r\n              <span>{file.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}