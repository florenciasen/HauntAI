{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\",\n    analysisResults: []\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [fileProgress, setFileProgress] = useState({});\n  const [analysisProgress, setAnalysisProgress] = useState({});\n\n  // File lebih dari 30MB akan dipecah menjadi chunk\n  const CHUNK_SIZE = 1024 * 1024 * 10; // 30MB chunk size\n\n  const handleClickOutside = e => {\n    if (tooltipRef.current && !tooltipRef.current.contains(e.target)) {\n      setOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n      console.log(`Selected ${files.length} files for upload`);\n    }\n  };\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    let fileList = [];\n    let fileCount = {}; // Objek untuk menyimpan jumlah file dengan nama yang sama\n\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\") || files[i].name.endsWith(\".php\") || files[i].name.endsWith(\".yaml\") || files[i].name.endsWith(\".ts\") || files[i].name.endsWith(\".env\") || files[i].name.endsWith(\".json\")) {\n        let fileName = files[i].name;\n        // Jika file dengan nama yang sama sudah ada, tambahin angka\n        if (fileCount[fileName]) {\n          let count = fileCount[fileName];\n          fileCount[fileName]++;\n          let nameParts = fileName.split(\".\");\n          let newFileName = `${nameParts[0]}(${count}).${nameParts.slice(1).join(\".\")}`;\n          let renamedFile = new File([files[i]], newFileName, {\n            type: files[i].type\n          });\n          fileList.push(renamedFile);\n        } else {\n          fileCount[fileName] = 1;\n          fileList.push(files[i]);\n        }\n      }\n    }\n    if (fileList.length > 0) {\n      setSelectedFiles(fileList);\n      setFolderUploaded(true);\n      setFileUploaded(false);\n      console.log(`Selected ${fileList.length} files from folder`, fileList);\n    } else {\n      console.warn(\"No .js, .py, .json, .env files found in folder\");\n      alert(\"Tidak ada file dengan ekstensi .js, .py, .json, .env, .php, yaml, .ts yang ditemukan.\");\n      setFolderUploaded(false);\n    }\n  };\n  const addLineNumbersToFile = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileContent = reader.result;\n        const lines = fileContent.split(\"\\n\");\n\n        // Menambahkan nomor baris\n        const linesWithNumbers = lines.map((line, index) => {\n          return `${index + 1}: ${line}`;\n        });\n        const newContent = linesWithNumbers.join(\"\\n\");\n        const newFile = new Blob([newContent], {\n          type: file.type\n        });\n        resolve(newFile); // Return the new file with line numbers added\n      };\n      reader.onerror = reject;\n      reader.readAsText(file);\n    });\n  };\n  const uploadFile = async (file, sessionId) => {\n    // Untuk file kecil (<= 30MB), upload langsung tanpa chunking\n    if (file.size <= CHUNK_SIZE) {\n      return await uploadSmallFile(file, sessionId);\n    } else {\n      // Untuk file besar (> 30MB), gunakan chunking\n      return await uploadLargeFile(file, sessionId);\n    }\n  };\n  const uploadSmallFile = async (file, sessionId) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"sessionId\", sessionId);\n    // Ini adalah kunci perbaikannya: untuk file kecil, kita perlu menandainya sebagai file lengkap\n    // bukan sebagai chunk\n    formData.append(\"start\", 0);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    formData.append(\"is_small_file\", \"true\"); // Menambahkan flag untuk menandai file kecil\n\n    console.log(`Uploading small file: ${file.name} (${(file.size / (1024 * 1024)).toFixed(2)}MB)`);\n\n    // Update progress to show started\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: 10\n    }));\n    const response = await fetch(\"http://localhost:5001/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload file failed: ${response.statusText}`);\n    }\n    const result = await response.json();\n    console.log(`File upload response:`, result);\n\n    // Update progress to 100% when complete\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: 100\n    }));\n    return result;\n  };\n  const uploadLargeFile = async (file, sessionId) => {\n    console.log(`Processing large file: ${file.name} (${(file.size / (1024 * 1024)).toFixed(2)}MB)`);\n    let start = 0;\n    while (start < file.size) {\n      const end = Math.min(start + CHUNK_SIZE, file.size);\n      const chunk = file.slice(start, end);\n      await uploadChunk(file, start, chunk, sessionId);\n      start = end;\n    }\n\n    // Ensure progress shows 100% when all chunks are uploaded\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: 100\n    }));\n    console.log(`Completed uploading file: ${file.name}`);\n    return {\n      message: \"Large file uploaded successfully\"\n    };\n  };\n  const uploadChunk = async (file, start, chunk, sessionId) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"sessionId\", sessionId);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\n    const response = await fetch(\"http://localhost:5001/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\n    }\n    const result = await response.json();\n    console.log(`Chunk upload response:`, result);\n\n    // Update progress for this specific file\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: progress\n    }));\n    return result;\n  };\n  const analyzeFilesWithGemini = async (savedFiles, uploadFolder) => {\n    setIsAnalyzing(true);\n    console.log(\"Starting Gemini analysis for files:\", savedFiles);\n    try {\n      // Initialize analysis progress for each file\n      const initialProgress = {};\n      savedFiles.forEach(filePath => {\n        const fileName = filePath.split(\"/\").pop();\n        initialProgress[fileName] = 0;\n      });\n      setAnalysisProgress(initialProgress);\n      const analysisResponse = await fetch(\"http://localhost:5001/analyze-files\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          files: savedFiles,\n          folder: uploadFolder,\n          analysisPrompt: \"Analyze this code and identify any security vulnerabilities, hardcoded credentials, or sensitive data. Also suggest improvements for code quality and performance. Structure your response with clear sections for issues found and recommendations.\"\n        })\n      });\n      const analysisResult = await analysisResponse.json();\n\n      // Check if there are any errors in the response\n      if (!analysisResponse.ok) {\n        throw new Error(analysisResult.error || \"Failed to analyze files\");\n      }\n\n      // Even if response is 200, check if there were partial errors\n      if (analysisResult.has_errors) {\n        // Collect error messages\n        const errorMessages = analysisResult.error_files.map(file => `${file.filename}: ${file.error}`).join(\"\\n\");\n        console.warn(\"Some files failed to analyze:\", errorMessages);\n\n        // Show warning to user about partial success\n        alert(`Analysis partially completed with errors:\\n${errorMessages}`);\n      } else {\n        console.log(\"Analysis completed successfully:\", analysisResult);\n        alert(\"Analysis complete! You can now view the results.\");\n      }\n      setUploadStatus(prev => ({\n        ...prev,\n        analyzed: true,\n        analysisResults: analysisResult.analyzed_files || [],\n        errorFiles: analysisResult.error_files || []\n      }));\n    } catch (error) {\n      console.error(\"Analysis error:\", error);\n\n      // Set specific error status in application state\n      setUploadStatus(prev => ({\n        ...prev,\n        analyzed: false,\n        analysisError: error.message\n      }));\n\n      // Show detailed error to user\n      alert(\"Error analyzing files: \" + error.message);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      console.warn(\"No files selected for upload\");\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    const sessionId = Date.now().toString();\n    console.log(`Starting upload session: ${sessionId}`);\n    try {\n      // Reset progress tracking\n      const initialProgress = {};\n      selectedFiles.forEach(file => {\n        initialProgress[file.name] = 0;\n      });\n      setFileProgress(initialProgress);\n      for (const file of selectedFiles) {\n        // Menambahkan nomor baris pada file sebelum upload\n        const fileWithLineNumbers = await addLineNumbersToFile(file);\n\n        // Upload file (using chunking for large files)\n        const fileObject = new File([fileWithLineNumbers], file.name, {\n          type: file.type\n        });\n        await uploadFile(fileObject, sessionId);\n      }\n      console.log(\"All files uploaded, finalizing...\");\n      const finalizeResponse = await fetch(\"http://localhost:5001/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId,\n          files: selectedFiles.map(f => ({\n            filename: f.name,\n            size: f.size\n          }))\n        })\n      });\n      if (!finalizeResponse.ok) throw new Error(\"Failed to finalize upload\");\n      const result = await finalizeResponse.json();\n      console.log(\"Upload finalized:\", result);\n      setUploadStatus(prevStatus => ({\n        ...prevStatus,\n        uploaded: true,\n        analyzed: false,\n        message: result.message,\n        analysisResults: []\n      }));\n      setIsUploading(false); // Pastikan upload status dihentikan\n      setIsAnalyzing(true); // Set analyzing status\n\n      alert(\"Upload berhasil! Now starting analysis...\");\n\n      // Start analyzing files with Gemini after upload completes\n      await analyzeFilesWithGemini(result.saved_files, result.folder);\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setUploadStatus({\n        uploaded: false,\n        analyzed: false,\n        message: error.message\n      });\n      alert(\"Error: \" + error.message);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Fungsi untuk menampilkan ukuran file dalam format yang sesuai\n  const formatFileSize = bytes => {\n    if (bytes < 1024) return bytes + \" B\";else if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + \" KB\";else return (bytes / (1024 * 1024)).toFixed(2) + \" MB\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-tooltip\",\n      ref: tooltipRef,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info-icon\",\n        onClick: () => setOpen(!open),\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 7\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Terms & Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 46\n        }, this), \"\\u2022 For optimal results, the total number of files after filtering should be 50.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 89\n        }, this), \"\\u2022 If more than 50 files are uploaded, the chance of false positives increases.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File or Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maximum upload limit: 50 files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${folderUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileUpload,\n              disabled: folderUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${fileUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              webkitdirectory: \"\",\n              directory: \"\",\n              multiple: true,\n              onChange: handleFolderUpload,\n              disabled: fileUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        disabled: isUploading || isAnalyzing,\n        children: isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing with AI...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"total-files-info\",\n        children: [\"Total selected files: \", selectedFiles.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: [\"(\", formatFileSize(file.size), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this), file.size > CHUNK_SIZE && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chunking-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this), isUploading && fileProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: `${fileProgress[file.name]}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-text\",\n              children: [fileProgress[file.name], \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 19\n          }, this), isAnalyzing && analysisProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"analyzing-indicator\",\n            children: \"Analyzing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 19\n          }, this), uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.open(`http://localhost:5001/view-pdf?filename=${file.name}`, '_blank'),\n            className: \"download-button\",\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"W27DRB8JcwLK7hpyoWnc88oy8eI=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","analysisResults","isUploading","setIsUploading","isAnalyzing","setIsAnalyzing","fileProgress","setFileProgress","analysisProgress","setAnalysisProgress","CHUNK_SIZE","handleClickOutside","e","tooltipRef","current","contains","target","setOpen","useEffect","document","addEventListener","removeEventListener","handleFileUpload","event","files","length","Array","from","console","log","handleFolderUpload","fileList","fileCount","i","name","endsWith","fileName","count","nameParts","split","newFileName","slice","join","renamedFile","File","type","push","warn","alert","addLineNumbersToFile","file","Promise","resolve","reject","reader","FileReader","onload","fileContent","result","lines","linesWithNumbers","map","line","index","newContent","newFile","Blob","onerror","readAsText","uploadFile","sessionId","size","uploadSmallFile","uploadLargeFile","formData","FormData","append","toFixed","prevProgress","response","fetch","method","body","ok","Error","statusText","json","start","end","Math","min","chunk","uploadChunk","progress","round","analyzeFilesWithGemini","savedFiles","uploadFolder","initialProgress","forEach","filePath","pop","analysisResponse","headers","JSON","stringify","folder","analysisPrompt","analysisResult","error","has_errors","errorMessages","error_files","filename","prev","analyzed_files","errorFiles","analysisError","handleUploadToBackend","Date","now","toString","fileWithLineNumbers","fileObject","finalizeResponse","f","prevStatus","saved_files","formatFileSize","bytes","className","children","_jsxFileName","lineNumber","columnNumber","ref","onClick","open","multiple","onChange","disabled","webkitdirectory","directory","undefined","style","width","includes","window","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\",\r\n    analysisResults: [],\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [fileProgress, setFileProgress] = useState({});\r\n  const [analysisProgress, setAnalysisProgress] = useState({});\r\n\r\n  // File lebih dari 30MB akan dipecah menjadi chunk\r\n  const CHUNK_SIZE = 1024 * 1024 * 10; // 30MB chunk size\r\n\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (tooltipRef.current && !tooltipRef.current.contains(e.target)) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  \r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n      console.log(`Selected ${files.length} files for upload`);\r\n    }\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = event.target.files;\r\n    let fileList = [];\r\n    let fileCount = {}; // Objek untuk menyimpan jumlah file dengan nama yang sama\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\")|| files[i].name.endsWith(\".php\") || files[i].name.endsWith(\".yaml\") || files[i].name.endsWith(\".ts\") || files[i].name.endsWith(\".env\") || files[i].name.endsWith(\".json\")) {\r\n        let fileName = files[i].name;\r\n        // Jika file dengan nama yang sama sudah ada, tambahin angka\r\n        if (fileCount[fileName]) {\r\n          let count = fileCount[fileName];\r\n          fileCount[fileName]++;\r\n          let nameParts = fileName.split(\".\");\r\n          let newFileName = `${nameParts[0]}(${count}).${nameParts.slice(1).join(\".\")}`;\r\n\r\n          let renamedFile = new File([files[i]], newFileName, { type: files[i].type });\r\n          fileList.push(renamedFile);\r\n        } else {\r\n          fileCount[fileName] = 1;\r\n          fileList.push(files[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (fileList.length > 0) {\r\n      setSelectedFiles(fileList);\r\n      setFolderUploaded(true);\r\n      setFileUploaded(false);\r\n      console.log(`Selected ${fileList.length} files from folder`, fileList);\r\n    } else {\r\n      console.warn(\"No .js, .py, .json, .env files found in folder\");\r\n      alert(\"Tidak ada file dengan ekstensi .js, .py, .json, .env, .php, yaml, .ts yang ditemukan.\");\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const addLineNumbersToFile = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const fileContent = reader.result;\r\n        const lines = fileContent.split(\"\\n\");\r\n\r\n        // Menambahkan nomor baris\r\n        const linesWithNumbers = lines.map((line, index) => {\r\n          return `${index + 1}: ${line}`;\r\n        });\r\n\r\n        const newContent = linesWithNumbers.join(\"\\n\");\r\n        const newFile = new Blob([newContent], { type: file.type });\r\n\r\n        resolve(newFile); // Return the new file with line numbers added\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const uploadFile = async (file, sessionId) => {\r\n    // Untuk file kecil (<= 30MB), upload langsung tanpa chunking\r\n    if (file.size <= CHUNK_SIZE) {\r\n      return await uploadSmallFile(file, sessionId);\r\n    } else {\r\n      // Untuk file besar (> 30MB), gunakan chunking\r\n      return await uploadLargeFile(file, sessionId);\r\n    }\r\n  };\r\n\r\n  const uploadSmallFile = async (file, sessionId) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"sessionId\", sessionId);\r\n    // Ini adalah kunci perbaikannya: untuk file kecil, kita perlu menandainya sebagai file lengkap\r\n    // bukan sebagai chunk\r\n    formData.append(\"start\", 0);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n    formData.append(\"is_small_file\", \"true\");  // Menambahkan flag untuk menandai file kecil\r\n  \r\n    console.log(`Uploading small file: ${file.name} (${(file.size / (1024 * 1024)).toFixed(2)}MB)`);\r\n\r\n     // Update progress to show started\r\n  setFileProgress((prevProgress) => ({\r\n    ...prevProgress,\r\n    [file.name]: 10,\r\n  }));\r\n\r\n  const response = await fetch(\"http://localhost:5001/upload-chunk\", {\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Upload file failed: ${response.statusText}`);\r\n  }\r\n\r\n  const result = await response.json();\r\n  console.log(`File upload response:`, result);\r\n\r\n  // Update progress to 100% when complete\r\n  setFileProgress((prevProgress) => ({\r\n    ...prevProgress,\r\n    [file.name]: 100,\r\n  }));\r\n\r\n  return result;\r\n};\r\n\r\n  const uploadLargeFile = async (file, sessionId) => {\r\n    console.log(`Processing large file: ${file.name} (${(file.size / (1024 * 1024)).toFixed(2)}MB)`);\r\n    \r\n    let start = 0;\r\n    while (start < file.size) {\r\n      const end = Math.min(start + CHUNK_SIZE, file.size);\r\n      const chunk = file.slice(start, end);\r\n      \r\n      await uploadChunk(file, start, chunk, sessionId);\r\n      start = end;\r\n    }\r\n\r\n    // Ensure progress shows 100% when all chunks are uploaded\r\n    setFileProgress((prevProgress) => ({\r\n      ...prevProgress,\r\n      [file.name]: 100,\r\n    }));\r\n    \r\n    console.log(`Completed uploading file: ${file.name}`);\r\n    return { message: \"Large file uploaded successfully\" };\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk, sessionId) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"sessionId\", sessionId);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n\r\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\r\n\r\n    const response = await fetch(\"http://localhost:5001/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\r\n    }\r\n    const result = await response.json();\r\n    console.log(`Chunk upload response:`, result);\r\n\r\n    // Update progress for this specific file\r\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\r\n    setFileProgress((prevProgress) => ({\r\n      ...prevProgress,\r\n      [file.name]: progress,\r\n    }));\r\n\r\n    return result;\r\n  };\r\n\r\n  const analyzeFilesWithGemini = async (savedFiles, uploadFolder) => {\r\n    setIsAnalyzing(true);\r\n    console.log(\"Starting Gemini analysis for files:\", savedFiles);\r\n  \r\n    try {\r\n      // Initialize analysis progress for each file\r\n      const initialProgress = {};\r\n      savedFiles.forEach((filePath) => {\r\n        const fileName = filePath.split(\"/\").pop();\r\n        initialProgress[fileName] = 0;\r\n      });\r\n      setAnalysisProgress(initialProgress);\r\n  \r\n      const analysisResponse = await fetch(\"http://localhost:5001/analyze-files\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          files: savedFiles,\r\n          folder: uploadFolder,\r\n          analysisPrompt:\r\n            \"Analyze this code and identify any security vulnerabilities, hardcoded credentials, or sensitive data. Also suggest improvements for code quality and performance. Structure your response with clear sections for issues found and recommendations.\",\r\n        }),\r\n      });\r\n  \r\n      const analysisResult = await analysisResponse.json();\r\n      \r\n      // Check if there are any errors in the response\r\n      if (!analysisResponse.ok) {\r\n        throw new Error(analysisResult.error || \"Failed to analyze files\");\r\n      }\r\n      \r\n      // Even if response is 200, check if there were partial errors\r\n      if (analysisResult.has_errors) {\r\n        // Collect error messages\r\n        const errorMessages = analysisResult.error_files.map(\r\n          (file) => `${file.filename}: ${file.error}`\r\n        ).join(\"\\n\");\r\n        \r\n        console.warn(\"Some files failed to analyze:\", errorMessages);\r\n        \r\n        // Show warning to user about partial success\r\n        alert(`Analysis partially completed with errors:\\n${errorMessages}`);\r\n      } else {\r\n        console.log(\"Analysis completed successfully:\", analysisResult);\r\n        alert(\"Analysis complete! You can now view the results.\");\r\n      }\r\n  \r\n      setUploadStatus((prev) => ({\r\n        ...prev,\r\n        analyzed: true,\r\n        analysisResults: analysisResult.analyzed_files || [],\r\n        errorFiles: analysisResult.error_files || []\r\n      }));\r\n  \r\n    } catch (error) {\r\n      console.error(\"Analysis error:\", error);\r\n      \r\n      // Set specific error status in application state\r\n      setUploadStatus((prev) => ({\r\n        ...prev,\r\n        analyzed: false,\r\n        analysisError: error.message\r\n      }));\r\n      \r\n      // Show detailed error to user\r\n      alert(\"Error analyzing files: \" + error.message);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      console.warn(\"No files selected for upload\");\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const sessionId = Date.now().toString();\r\n    console.log(`Starting upload session: ${sessionId}`);\r\n\r\n    try {\r\n      // Reset progress tracking\r\n      const initialProgress = {};\r\n      selectedFiles.forEach(file => {\r\n        initialProgress[file.name] = 0;\r\n      });\r\n      setFileProgress(initialProgress);\r\n\r\n      for (const file of selectedFiles) {\r\n        // Menambahkan nomor baris pada file sebelum upload\r\n        const fileWithLineNumbers = await addLineNumbersToFile(file);\r\n        \r\n        // Upload file (using chunking for large files)\r\n        const fileObject = new File([fileWithLineNumbers], file.name, { type: file.type });\r\n        await uploadFile(fileObject, sessionId);\r\n      }\r\n\r\n      console.log(\"All files uploaded, finalizing...\");\r\n      const finalizeResponse = await fetch(\"http://localhost:5001/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          sessionId,\r\n          files: selectedFiles.map((f) => ({\r\n            filename: f.name,\r\n            size: f.size,\r\n          })),\r\n        }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) throw new Error(\"Failed to finalize upload\");\r\n\r\n      const result = await finalizeResponse.json();\r\n      console.log(\"Upload finalized:\", result);\r\n\r\n      setUploadStatus((prevStatus) => ({\r\n        ...prevStatus,\r\n        uploaded: true,\r\n        analyzed: false,\r\n        message: result.message,\r\n        analysisResults: [],\r\n      }));\r\n\r\n      setIsUploading(false); // Pastikan upload status dihentikan\r\n      setIsAnalyzing(true); // Set analyzing status\r\n\r\n      alert(\"Upload berhasil! Now starting analysis...\");\r\n\r\n      // Start analyzing files with Gemini after upload completes\r\n      await analyzeFilesWithGemini(result.saved_files, result.folder);\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      setUploadStatus({\r\n        uploaded: false,\r\n        analyzed: false,\r\n        message: error.message,\r\n      });\r\n      alert(\"Error: \" + error.message);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n\r\n  // Fungsi untuk menampilkan ukuran file dalam format yang sesuai\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes < 1024) return bytes + \" B\";\r\n    else if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + \" KB\";\r\n    else return (bytes / (1024 * 1024)).toFixed(2) + \" MB\";\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"info-tooltip\" ref={tooltipRef}>\r\n      <span className=\"info-icon\" onClick={() => setOpen(!open)}>?</span>\r\n      {open && (\r\n        <div className=\"tooltip-content\">\r\n          <strong>Terms & Conditions</strong><br />\r\n          • For optimal results, the total number of files after filtering should be 50.<br />\r\n          • If more than 50 files are uploaded, the chance of false positives increases.\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File or Folder</h2>\r\n        <p className=\"upload-limit\">Maximum upload limit: 50 files</p>\r\n        <div className=\"upload-options\">\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${folderUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload File\r\n              <input type=\"file\" multiple onChange={handleFileUpload} disabled={folderUploaded} />\r\n            </label>\r\n          </div>\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${fileUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload Folder\r\n              <input type=\"file\" webkitdirectory=\"\" directory=\"\" multiple onChange={handleFolderUpload} disabled={fileUploaded} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button className=\"upload-button\" onClick={handleUploadToBackend} disabled={isUploading || isAnalyzing}>\r\n          {isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing with AI...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n\r\n      {selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <p className=\"total-files-info\">Total selected files: {selectedFiles.length}</p>\r\n          <ul className=\"file-list\">\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index} className=\"file-item\">\r\n                <div className=\"file-info\">\r\n                  <span className=\"file-name\">{file.name}</span>\r\n                  <span className=\"file-size\">({formatFileSize(file.size)})</span>\r\n                  {file.size > CHUNK_SIZE && <span className=\"chunking-indicator\"></span>}\r\n                </div>\r\n                \r\n                {isUploading && fileProgress[file.name] !== undefined && (\r\n                  <div className=\"progress-container\">\r\n                    <div \r\n                      className=\"progress-bar\" \r\n                      style={{ width: `${fileProgress[file.name]}%` }}\r\n                    ></div>\r\n                    <span className=\"progress-text\">{fileProgress[file.name]}%</span>\r\n                  </div>\r\n                )}\r\n                \r\n                {isAnalyzing && analysisProgress[file.name] !== undefined && (\r\n                  <span className=\"analyzing-indicator\">Analyzing...</span>\r\n                )}\r\n\r\n              {uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && (\r\n                <button\r\n                onClick={() => window.open(`http://localhost:5001/view-pdf?filename=${file.name}`, '_blank')}\r\n                className=\"download-button\"\r\n                >\r\n                View PDF\r\n                </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ca,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMyB,UAAU,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;;EAGrC,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChC,IAAIC,UAAU,CAACC,OAAO,IAAI,CAACD,UAAU,CAACC,OAAO,CAACC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC,EAAE;MAChEC,OAAO,CAAC,KAAK,CAAC;IAChB;EACF,CAAC;EAEDC,SAAS,CAAC,MAAM;IACdC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAET,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXQ,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEV,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,KAAK,GAAGD,KAAK,CAACP,MAAM,CAACQ,KAAK;IAChC,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACpB9B,gBAAgB,CAAC+B,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAC;MACnCjC,eAAe,CAAC,IAAI,CAAC;MACrBE,iBAAiB,CAAC,KAAK,CAAC;MACxBmC,OAAO,CAACC,GAAG,CAAC,YAAYL,KAAK,CAACC,MAAM,mBAAmB,CAAC;IAC1D;EACF,CAAC;EAED,MAAMK,kBAAkB,GAAIP,KAAK,IAAK;IACpC,MAAMC,KAAK,GAAGD,KAAK,CAACP,MAAM,CAACQ,KAAK;IAChC,IAAIO,QAAQ,GAAG,EAAE;IACjB,IAAIC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACC,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACrC,IAAIT,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,IAAIX,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,IAAGX,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAIX,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,IAAIX,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,IAAIX,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAIX,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;QAC5O,IAAIC,QAAQ,GAAGZ,KAAK,CAACS,CAAC,CAAC,CAACC,IAAI;QAC5B;QACA,IAAIF,SAAS,CAACI,QAAQ,CAAC,EAAE;UACvB,IAAIC,KAAK,GAAGL,SAAS,CAACI,QAAQ,CAAC;UAC/BJ,SAAS,CAACI,QAAQ,CAAC,EAAE;UACrB,IAAIE,SAAS,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;UACnC,IAAIC,WAAW,GAAG,GAAGF,SAAS,CAAC,CAAC,CAAC,IAAID,KAAK,KAAKC,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;UAE7E,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAACpB,KAAK,CAACS,CAAC,CAAC,CAAC,EAAEO,WAAW,EAAE;YAAEK,IAAI,EAAErB,KAAK,CAACS,CAAC,CAAC,CAACY;UAAK,CAAC,CAAC;UAC5Ed,QAAQ,CAACe,IAAI,CAACH,WAAW,CAAC;QAC5B,CAAC,MAAM;UACLX,SAAS,CAACI,QAAQ,CAAC,GAAG,CAAC;UACvBL,QAAQ,CAACe,IAAI,CAACtB,KAAK,CAACS,CAAC,CAAC,CAAC;QACzB;MACF;IACF;IAEA,IAAIF,QAAQ,CAACN,MAAM,GAAG,CAAC,EAAE;MACvB9B,gBAAgB,CAACoC,QAAQ,CAAC;MAC1BtC,iBAAiB,CAAC,IAAI,CAAC;MACvBF,eAAe,CAAC,KAAK,CAAC;MACtBqC,OAAO,CAACC,GAAG,CAAC,YAAYE,QAAQ,CAACN,MAAM,oBAAoB,EAAEM,QAAQ,CAAC;IACxE,CAAC,MAAM;MACLH,OAAO,CAACmB,IAAI,CAAC,gDAAgD,CAAC;MAC9DC,KAAK,CAAC,uFAAuF,CAAC;MAC9FvD,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,MAAMwD,oBAAoB,GAAIC,IAAI,IAAK;IACrC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpB,MAAMC,WAAW,GAAGH,MAAM,CAACI,MAAM;QACjC,MAAMC,KAAK,GAAGF,WAAW,CAAClB,KAAK,CAAC,IAAI,CAAC;;QAErC;QACA,MAAMqB,gBAAgB,GAAGD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAClD,OAAO,GAAGA,KAAK,GAAG,CAAC,KAAKD,IAAI,EAAE;QAChC,CAAC,CAAC;QAEF,MAAME,UAAU,GAAGJ,gBAAgB,CAAClB,IAAI,CAAC,IAAI,CAAC;QAC9C,MAAMuB,OAAO,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;UAAEnB,IAAI,EAAEK,IAAI,CAACL;QAAK,CAAC,CAAC;QAE3DO,OAAO,CAACa,OAAO,CAAC,CAAC,CAAC;MACpB,CAAC;MACDX,MAAM,CAACa,OAAO,GAAGd,MAAM;MACvBC,MAAM,CAACc,UAAU,CAAClB,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmB,UAAU,GAAG,MAAAA,CAAOnB,IAAI,EAAEoB,SAAS,KAAK;IAC5C;IACA,IAAIpB,IAAI,CAACqB,IAAI,IAAI7D,UAAU,EAAE;MAC3B,OAAO,MAAM8D,eAAe,CAACtB,IAAI,EAAEoB,SAAS,CAAC;IAC/C,CAAC,MAAM;MACL;MACA,OAAO,MAAMG,eAAe,CAACvB,IAAI,EAAEoB,SAAS,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,eAAe,GAAG,MAAAA,CAAOtB,IAAI,EAAEoB,SAAS,KAAK;IACjD,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE1B,IAAI,CAAC;IAC7BwB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEN,SAAS,CAAC;IACvC;IACA;IACAI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3BF,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE1B,IAAI,CAACqB,IAAI,CAAC;IACxCG,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE1B,IAAI,CAAChB,IAAI,CAAC;IACtCwC,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC,CAAE;;IAE3ChD,OAAO,CAACC,GAAG,CAAC,yBAAyBqB,IAAI,CAAChB,IAAI,KAAK,CAACgB,IAAI,CAACqB,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;;IAE9F;IACHtE,eAAe,CAAEuE,YAAY,KAAM;MACjC,GAAGA,YAAY;MACf,CAAC5B,IAAI,CAAChB,IAAI,GAAG;IACf,CAAC,CAAC,CAAC;IAEH,MAAM6C,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACR,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,UAAU,EAAE,CAAC;IAC/D;IAEA,MAAM3B,MAAM,GAAG,MAAMqB,QAAQ,CAACO,IAAI,CAAC,CAAC;IACpC1D,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE6B,MAAM,CAAC;;IAE5C;IACAnD,eAAe,CAAEuE,YAAY,KAAM;MACjC,GAAGA,YAAY;MACf,CAAC5B,IAAI,CAAChB,IAAI,GAAG;IACf,CAAC,CAAC,CAAC;IAEH,OAAOwB,MAAM;EACf,CAAC;EAEC,MAAMe,eAAe,GAAG,MAAAA,CAAOvB,IAAI,EAAEoB,SAAS,KAAK;IACjD1C,OAAO,CAACC,GAAG,CAAC,0BAA0BqB,IAAI,CAAChB,IAAI,KAAK,CAACgB,IAAI,CAACqB,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;IAEhG,IAAIU,KAAK,GAAG,CAAC;IACb,OAAOA,KAAK,GAAGrC,IAAI,CAACqB,IAAI,EAAE;MACxB,MAAMiB,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAG7E,UAAU,EAAEwC,IAAI,CAACqB,IAAI,CAAC;MACnD,MAAMoB,KAAK,GAAGzC,IAAI,CAACT,KAAK,CAAC8C,KAAK,EAAEC,GAAG,CAAC;MAEpC,MAAMI,WAAW,CAAC1C,IAAI,EAAEqC,KAAK,EAAEI,KAAK,EAAErB,SAAS,CAAC;MAChDiB,KAAK,GAAGC,GAAG;IACb;;IAEA;IACAjF,eAAe,CAAEuE,YAAY,KAAM;MACjC,GAAGA,YAAY;MACf,CAAC5B,IAAI,CAAChB,IAAI,GAAG;IACf,CAAC,CAAC,CAAC;IAEHN,OAAO,CAACC,GAAG,CAAC,6BAA6BqB,IAAI,CAAChB,IAAI,EAAE,CAAC;IACrD,OAAO;MAAElC,OAAO,EAAE;IAAmC,CAAC;EACxD,CAAC;EAED,MAAM4F,WAAW,GAAG,MAAAA,CAAO1C,IAAI,EAAEqC,KAAK,EAAEI,KAAK,EAAErB,SAAS,KAAK;IAC3D,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEe,KAAK,CAAC;IAC9BjB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEN,SAAS,CAAC;IACvCI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEW,KAAK,CAAC;IAC/Bb,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE1B,IAAI,CAACqB,IAAI,CAAC;IACxCG,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE1B,IAAI,CAAChB,IAAI,CAAC;IAEtCN,OAAO,CAACC,GAAG,CAAC,uBAAuBqB,IAAI,CAAChB,IAAI,KAAKqD,KAAK,IAAIA,KAAK,GAAGI,KAAK,CAACpB,IAAI,OAAOrB,IAAI,CAACqB,IAAI,EAAE,CAAC;IAE/F,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACR,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwBL,QAAQ,CAACM,UAAU,EAAE,CAAC;IAChE;IACA,MAAM3B,MAAM,GAAG,MAAMqB,QAAQ,CAACO,IAAI,CAAC,CAAC;IACpC1D,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE6B,MAAM,CAAC;;IAE7C;IACA,MAAMmC,QAAQ,GAAGJ,IAAI,CAACC,GAAG,CAACD,IAAI,CAACK,KAAK,CAAC,CAACP,KAAK,GAAGI,KAAK,CAACpB,IAAI,IAAIrB,IAAI,CAACqB,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;IAClFhE,eAAe,CAAEuE,YAAY,KAAM;MACjC,GAAGA,YAAY;MACf,CAAC5B,IAAI,CAAChB,IAAI,GAAG2D;IACf,CAAC,CAAC,CAAC;IAEH,OAAOnC,MAAM;EACf,CAAC;EAED,MAAMqC,sBAAsB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,YAAY,KAAK;IACjE5F,cAAc,CAAC,IAAI,CAAC;IACpBuB,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEmE,UAAU,CAAC;IAE9D,IAAI;MACF;MACA,MAAME,eAAe,GAAG,CAAC,CAAC;MAC1BF,UAAU,CAACG,OAAO,CAAEC,QAAQ,IAAK;QAC/B,MAAMhE,QAAQ,GAAGgE,QAAQ,CAAC7D,KAAK,CAAC,GAAG,CAAC,CAAC8D,GAAG,CAAC,CAAC;QAC1CH,eAAe,CAAC9D,QAAQ,CAAC,GAAG,CAAC;MAC/B,CAAC,CAAC;MACF3B,mBAAmB,CAACyF,eAAe,CAAC;MAEpC,MAAMI,gBAAgB,GAAG,MAAMtB,KAAK,CAAC,qCAAqC,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdsB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDrB,IAAI,EAAEsB,IAAI,CAACC,SAAS,CAAC;UACnBjF,KAAK,EAAEwE,UAAU;UACjBU,MAAM,EAAET,YAAY;UACpBU,cAAc,EACZ;QACJ,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,cAAc,GAAG,MAAMN,gBAAgB,CAAChB,IAAI,CAAC,CAAC;;MAEpD;MACA,IAAI,CAACgB,gBAAgB,CAACnB,EAAE,EAAE;QACxB,MAAM,IAAIC,KAAK,CAACwB,cAAc,CAACC,KAAK,IAAI,yBAAyB,CAAC;MACpE;;MAEA;MACA,IAAID,cAAc,CAACE,UAAU,EAAE;QAC7B;QACA,MAAMC,aAAa,GAAGH,cAAc,CAACI,WAAW,CAACnD,GAAG,CACjDX,IAAI,IAAK,GAAGA,IAAI,CAAC+D,QAAQ,KAAK/D,IAAI,CAAC2D,KAAK,EAC3C,CAAC,CAACnE,IAAI,CAAC,IAAI,CAAC;QAEZd,OAAO,CAACmB,IAAI,CAAC,+BAA+B,EAAEgE,aAAa,CAAC;;QAE5D;QACA/D,KAAK,CAAC,8CAA8C+D,aAAa,EAAE,CAAC;MACtE,CAAC,MAAM;QACLnF,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE+E,cAAc,CAAC;QAC/D5D,KAAK,CAAC,kDAAkD,CAAC;MAC3D;MAEAnD,eAAe,CAAEqH,IAAI,KAAM;QACzB,GAAGA,IAAI;QACPnH,QAAQ,EAAE,IAAI;QACdE,eAAe,EAAE2G,cAAc,CAACO,cAAc,IAAI,EAAE;QACpDC,UAAU,EAAER,cAAc,CAACI,WAAW,IAAI;MAC5C,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdjF,OAAO,CAACiF,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;;MAEvC;MACAhH,eAAe,CAAEqH,IAAI,KAAM;QACzB,GAAGA,IAAI;QACPnH,QAAQ,EAAE,KAAK;QACfsH,aAAa,EAAER,KAAK,CAAC7G;MACvB,CAAC,CAAC,CAAC;;MAEH;MACAgD,KAAK,CAAC,yBAAyB,GAAG6D,KAAK,CAAC7G,OAAO,CAAC;IAClD,CAAC,SAAS;MACRK,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMiH,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI5H,aAAa,CAAC+B,MAAM,KAAK,CAAC,EAAE;MAC9BG,OAAO,CAACmB,IAAI,CAAC,8BAA8B,CAAC;MAC5CC,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEA7C,cAAc,CAAC,IAAI,CAAC;IACpB,MAAMmE,SAAS,GAAGiD,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACvC7F,OAAO,CAACC,GAAG,CAAC,4BAA4ByC,SAAS,EAAE,CAAC;IAEpD,IAAI;MACF;MACA,MAAM4B,eAAe,GAAG,CAAC,CAAC;MAC1BxG,aAAa,CAACyG,OAAO,CAACjD,IAAI,IAAI;QAC5BgD,eAAe,CAAChD,IAAI,CAAChB,IAAI,CAAC,GAAG,CAAC;MAChC,CAAC,CAAC;MACF3B,eAAe,CAAC2F,eAAe,CAAC;MAEhC,KAAK,MAAMhD,IAAI,IAAIxD,aAAa,EAAE;QAChC;QACA,MAAMgI,mBAAmB,GAAG,MAAMzE,oBAAoB,CAACC,IAAI,CAAC;;QAE5D;QACA,MAAMyE,UAAU,GAAG,IAAI/E,IAAI,CAAC,CAAC8E,mBAAmB,CAAC,EAAExE,IAAI,CAAChB,IAAI,EAAE;UAAEW,IAAI,EAAEK,IAAI,CAACL;QAAK,CAAC,CAAC;QAClF,MAAMwB,UAAU,CAACsD,UAAU,EAAErD,SAAS,CAAC;MACzC;MAEA1C,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,MAAM+F,gBAAgB,GAAG,MAAM5C,KAAK,CAAC,uCAAuC,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdsB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDrB,IAAI,EAAEsB,IAAI,CAACC,SAAS,CAAC;UACnBnC,SAAS;UACT9C,KAAK,EAAE9B,aAAa,CAACmE,GAAG,CAAEgE,CAAC,KAAM;YAC/BZ,QAAQ,EAAEY,CAAC,CAAC3F,IAAI;YAChBqC,IAAI,EAAEsD,CAAC,CAACtD;UACV,CAAC,CAAC;QACJ,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACqD,gBAAgB,CAACzC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAEtE,MAAM1B,MAAM,GAAG,MAAMkE,gBAAgB,CAACtC,IAAI,CAAC,CAAC;MAC5C1D,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE6B,MAAM,CAAC;MAExC7D,eAAe,CAAEiI,UAAU,KAAM;QAC/B,GAAGA,UAAU;QACbhI,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,KAAK;QACfC,OAAO,EAAE0D,MAAM,CAAC1D,OAAO;QACvBC,eAAe,EAAE;MACnB,CAAC,CAAC,CAAC;MAEHE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;MACvBE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEtB2C,KAAK,CAAC,2CAA2C,CAAC;;MAElD;MACA,MAAM+C,sBAAsB,CAACrC,MAAM,CAACqE,WAAW,EAAErE,MAAM,CAACgD,MAAM,CAAC;IACjE,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdjF,OAAO,CAACiF,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrChH,eAAe,CAAC;QACdC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE,KAAK;QACfC,OAAO,EAAE6G,KAAK,CAAC7G;MACjB,CAAC,CAAC;MACFgD,KAAK,CAAC,SAAS,GAAG6D,KAAK,CAAC7G,OAAO,CAAC;IAClC,CAAC,SAAS;MACRG,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAGD;EACA,MAAM6H,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,GAAG,IAAI,EAAE,OAAOA,KAAK,GAAG,IAAI,CAAC,KACjC,IAAIA,KAAK,GAAG,IAAI,GAAG,IAAI,EAAE,OAAO,CAACA,KAAK,GAAG,IAAI,EAAEpD,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAClE,OAAO,CAACoD,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,EAAEpD,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;EACxD,CAAC;EAGD,oBACE1F,OAAA;IAAK+I,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjChJ,OAAA;MAAK+I,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAO;MAAA/F,QAAA,EAAAgG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCnJ,OAAA;MAAK+I,SAAS,EAAC,cAAc;MAACK,GAAG,EAAE1H,UAAW;MAAAsH,QAAA,gBAC9ChJ,OAAA;QAAM+I,SAAS,EAAC,WAAW;QAACM,OAAO,EAAEA,CAAA,KAAMvH,OAAO,CAAC,CAACwH,IAAI,CAAE;QAAAN,QAAA,EAAC;MAAC;QAAA/F,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAClEG,IAAI,iBACHtJ,OAAA;QAAK+I,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BhJ,OAAA;UAAAgJ,QAAA,EAAQ;QAAkB;UAAA/F,QAAA,EAAAgG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAnJ,OAAA;UAAAiD,QAAA,EAAAgG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,uFACqC,eAAAnJ,OAAA;UAAAiD,QAAA,EAAAgG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,uFAEtF;MAAA;QAAAlG,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAlG,QAAA,EAAAgG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEJnJ,OAAA;MAAK+I,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BhJ,OAAA;QAAAgJ,QAAA,EAAI;MAAqB;QAAA/F,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BnJ,OAAA;QAAG+I,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA8B;QAAA/F,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9DnJ,OAAA;QAAK+I,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BhJ,OAAA;UAAK+I,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBhJ,OAAA;YAAO+I,SAAS,EAAE,gBAAgB1I,cAAc,GAAG,UAAU,GAAG,EAAE,EAAG;YAAA2I,QAAA,GAAE,aAErE,eAAAhJ,OAAA;cAAO0D,IAAI,EAAC,MAAM;cAAC6F,QAAQ;cAACC,QAAQ,EAAErH,gBAAiB;cAACsH,QAAQ,EAAEpJ;YAAe;cAAA4C,QAAA,EAAAgG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAlG,QAAA,EAAAgG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E;QAAC;UAAAlG,QAAA,EAAAgG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNnJ,OAAA;UAAK+I,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBhJ,OAAA;YAAO+I,SAAS,EAAE,gBAAgB5I,YAAY,GAAG,UAAU,GAAG,EAAE,EAAG;YAAA6I,QAAA,GAAE,eAEnE,eAAAhJ,OAAA;cAAO0D,IAAI,EAAC,MAAM;cAACgG,eAAe,EAAC,EAAE;cAACC,SAAS,EAAC,EAAE;cAACJ,QAAQ;cAACC,QAAQ,EAAE7G,kBAAmB;cAAC8G,QAAQ,EAAEtJ;YAAa;cAAA8C,QAAA,EAAAgG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAlG,QAAA,EAAAgG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/G;QAAC;UAAAlG,QAAA,EAAAgG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAlG,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNnJ,OAAA;QAAQ+I,SAAS,EAAC,eAAe;QAACM,OAAO,EAAElB,qBAAsB;QAACsB,QAAQ,EAAE1I,WAAW,IAAIE,WAAY;QAAA+H,QAAA,EACpGjI,WAAW,GAAG,cAAc,GAAGE,WAAW,GAAG,sBAAsB,GAAG;MAAQ;QAAAgC,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC;IAAA;MAAAlG,QAAA,EAAAgG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL5I,aAAa,CAAC+B,MAAM,GAAG,CAAC,iBACvBtC,OAAA;MAAK+I,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvChJ,OAAA;QAAAgJ,QAAA,EAAI;MAAwB;QAAA/F,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCnJ,OAAA;QAAG+I,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAAC,wBAAsB,EAACzI,aAAa,CAAC+B,MAAM;MAAA;QAAAW,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChFnJ,OAAA;QAAI+I,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtBzI,aAAa,CAACmE,GAAG,CAAC,CAACX,IAAI,EAAEa,KAAK,kBAC7B5E,OAAA;UAAgB+I,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACnChJ,OAAA;YAAK+I,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBhJ,OAAA;cAAM+I,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEjF,IAAI,CAAChB;YAAI;cAAAE,QAAA,EAAAgG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9CnJ,OAAA;cAAM+I,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAC,GAAC,EAACH,cAAc,CAAC9E,IAAI,CAACqB,IAAI,CAAC,EAAC,GAAC;YAAA;cAAAnC,QAAA,EAAAgG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC/DpF,IAAI,CAACqB,IAAI,GAAG7D,UAAU,iBAAIvB,OAAA;cAAM+I,SAAS,EAAC;YAAoB;cAAA9F,QAAA,EAAAgG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAlG,QAAA,EAAAgG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE,CAAC,EAELpI,WAAW,IAAII,YAAY,CAAC4C,IAAI,CAAChB,IAAI,CAAC,KAAK6G,SAAS,iBACnD5J,OAAA;YAAK+I,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjChJ,OAAA;cACE+I,SAAS,EAAC,cAAc;cACxBc,KAAK,EAAE;gBAAEC,KAAK,EAAE,GAAG3I,YAAY,CAAC4C,IAAI,CAAChB,IAAI,CAAC;cAAI;YAAE;cAAAE,QAAA,EAAAgG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CAAC,eACPnJ,OAAA;cAAM+I,SAAS,EAAC,eAAe;cAAAC,QAAA,GAAE7H,YAAY,CAAC4C,IAAI,CAAChB,IAAI,CAAC,EAAC,GAAC;YAAA;cAAAE,QAAA,EAAAgG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAlG,QAAA,EAAAgG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CACN,EAEAlI,WAAW,IAAII,gBAAgB,CAAC0C,IAAI,CAAChB,IAAI,CAAC,KAAK6G,SAAS,iBACvD5J,OAAA;YAAM+I,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAAY;YAAA/F,QAAA,EAAAgG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACzD,EAEF1I,YAAY,CAACG,QAAQ,IAAIH,YAAY,CAACK,eAAe,CAACiJ,QAAQ,CAAChG,IAAI,CAAChB,IAAI,CAAC,iBACxE/C,OAAA;YACAqJ,OAAO,EAAEA,CAAA,KAAMW,MAAM,CAACV,IAAI,CAAC,2CAA2CvF,IAAI,CAAChB,IAAI,EAAE,EAAE,QAAQ,CAAE;YAC7FgG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC1B;UAED;YAAA/F,QAAA,EAAAgG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACP;QAAA,GA5BMvE,KAAK;UAAA3B,QAAA,EAAAgG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6BV,CACL;MAAC;QAAAlG,QAAA,EAAAgG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAlG,QAAA,EAAAgG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAlG,QAAA,EAAAgG,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjJ,EAAA,CAvbuBD,QAAQ;AAAAgK,EAAA,GAARhK,QAAQ;AAAA,IAAAgK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}