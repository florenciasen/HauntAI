{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\"\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [progress, setProgress] = useState({});\n  const CHUNK_SIZE = 1024 * 1024 * 10;\n  const MAX_CONCURRENT_UPLOADS = 3;\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n      // Reset progress when new files are selected\n      setProgress({});\n    }\n  };\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    let fileList = [];\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\")) {\n        fileList.push(files[i]);\n      }\n    }\n    if (fileList.length > 0) {\n      setSelectedFiles(fileList);\n      setFolderUploaded(true);\n      setFileUploaded(false);\n      // Reset progress when new folder is selected\n      setProgress({});\n    } else {\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\n      setFolderUploaded(false);\n    }\n  };\n  const uploadChunk = async (file, start, chunk, sessionId) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"sessionId\", sessionId);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\n    }\n    return await response.json();\n  };\n  const uploadFile = async (file, sessionId) => {\n    const chunks = Math.ceil(file.size / CHUNK_SIZE);\n    let completedChunks = 0;\n\n    // Initialize progress for this file if it doesn't exist\n    if (progress[file.name] === undefined) {\n      setProgress(prev => ({\n        ...prev,\n        [file.name]: 0\n      }));\n    }\n    try {\n      for (let i = 0; i < chunks; i++) {\n        const start = i * CHUNK_SIZE;\n        const chunk = file.slice(start, start + CHUNK_SIZE);\n        await uploadChunk(file, start, chunk, sessionId);\n        completedChunks++;\n        const progressPercent = Math.round(completedChunks / chunks * 100);\n        setProgress(prev => ({\n          ...prev,\n          [file.name]: progressPercent\n        }));\n      }\n    } catch (error) {\n      console.error(`Error uploading ${file.name}:`, error);\n      // In case of error, maintain the last valid progress\n      throw error;\n    }\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    const sessionId = Date.now().toString();\n    try {\n      // Initialize progress for all files\n      const initialProgress = {};\n      selectedFiles.forEach(file => {\n        initialProgress[file.name] = 0;\n      });\n      setProgress(initialProgress);\n\n      // Upload files in batches\n      for (let i = 0; i < selectedFiles.length; i += MAX_CONCURRENT_UPLOADS) {\n        const batch = selectedFiles.slice(i, i + MAX_CONCURRENT_UPLOADS);\n        await Promise.all(batch.map(file => uploadFile(file, sessionId)));\n      }\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId,\n          files: selectedFiles.map(f => ({\n            filename: f.name,\n            size: f.size\n          }))\n        })\n      });\n      if (!finalizeResponse.ok) {\n        throw new Error(\"Failed to finalize upload\");\n      }\n      const result = await finalizeResponse.json();\n      setUploadStatus({\n        uploaded: true,\n        analyzed: false,\n        message: result.message\n      });\n      alert(\"Upload berhasil!\");\n    } catch (error) {\n      setUploadStatus({\n        uploaded: false,\n        analyzed: false,\n        message: error.message\n      });\n      alert(\"Terjadi kesalahan saat mengupload file.\");\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File or Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maksimum ukuran file: 1GB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${folderUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileUpload,\n              disabled: folderUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${fileUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              webkitdirectory: \"\",\n              directory: \"\",\n              multiple: true,\n              onChange: handleFolderUpload,\n              disabled: fileUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        disabled: isUploading,\n        children: isUploading ? \"Uploading...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, progress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress\",\n            children: [\" - \", progress[file.name], \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"575y/DQR4p+b8VlZDFpqG1DJgtQ=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","isUploading","setIsUploading","progress","setProgress","CHUNK_SIZE","MAX_CONCURRENT_UPLOADS","handleFileUpload","event","files","target","length","Array","from","handleFolderUpload","fileList","i","name","endsWith","push","alert","uploadChunk","file","start","chunk","sessionId","formData","FormData","append","size","response","fetch","method","body","ok","Error","statusText","json","uploadFile","chunks","Math","ceil","completedChunks","undefined","prev","slice","progressPercent","round","error","console","handleUploadToBackend","Date","now","toString","initialProgress","forEach","batch","Promise","all","map","finalizeResponse","headers","JSON","stringify","f","filename","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","disabled","webkitdirectory","directory","onClick","index","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\"\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [progress, setProgress] = useState({});\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 10; \r\n  const MAX_CONCURRENT_UPLOADS = 3;\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n      // Reset progress when new files are selected\r\n      setProgress({});\r\n    }\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = event.target.files;\r\n    let fileList = [];\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\")) {\r\n        fileList.push(files[i]);\r\n      }\r\n    }\r\n    if (fileList.length > 0) {\r\n      setSelectedFiles(fileList);\r\n      setFolderUploaded(true);\r\n      setFileUploaded(false);\r\n      // Reset progress when new folder is selected\r\n      setProgress({});\r\n    } else {\r\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk, sessionId) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"sessionId\", sessionId);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n    \r\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  };\r\n\r\n  const uploadFile = async (file, sessionId) => {\r\n    const chunks = Math.ceil(file.size / CHUNK_SIZE);\r\n    let completedChunks = 0;\r\n    \r\n    // Initialize progress for this file if it doesn't exist\r\n    if (progress[file.name] === undefined) {\r\n      setProgress(prev => ({ ...prev, [file.name]: 0 }));\r\n    }\r\n\r\n    try {\r\n      for (let i = 0; i < chunks; i++) {\r\n        const start = i * CHUNK_SIZE;\r\n        const chunk = file.slice(start, start + CHUNK_SIZE);\r\n        await uploadChunk(file, start, chunk, sessionId);\r\n        \r\n        completedChunks++;\r\n        const progressPercent = Math.round((completedChunks / chunks) * 100);\r\n        \r\n        setProgress(prev => ({\r\n          ...prev,\r\n          [file.name]: progressPercent\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error uploading ${file.name}:`, error);\r\n      // In case of error, maintain the last valid progress\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const sessionId = Date.now().toString();\r\n    \r\n    try {\r\n      // Initialize progress for all files\r\n      const initialProgress = {};\r\n      selectedFiles.forEach(file => {\r\n        initialProgress[file.name] = 0;\r\n      });\r\n      setProgress(initialProgress);\r\n\r\n      // Upload files in batches\r\n      for (let i = 0; i < selectedFiles.length; i += MAX_CONCURRENT_UPLOADS) {\r\n        const batch = selectedFiles.slice(i, i + MAX_CONCURRENT_UPLOADS);\r\n        await Promise.all(batch.map(file => uploadFile(file, sessionId)));\r\n      }\r\n\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          sessionId,\r\n          files: selectedFiles.map(f => ({ \r\n            filename: f.name, \r\n            size: f.size \r\n          }))\r\n        }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) {\r\n        throw new Error(\"Failed to finalize upload\");\r\n      }\r\n\r\n      const result = await finalizeResponse.json();\r\n      \r\n      setUploadStatus({\r\n        uploaded: true,\r\n        analyzed: false,\r\n        message: result.message\r\n      });\r\n\r\n      alert(\"Upload berhasil!\");\r\n    } catch (error) {\r\n      setUploadStatus({\r\n        uploaded: false,\r\n        analyzed: false,\r\n        message: error.message\r\n      });\r\n      alert(\"Terjadi kesalahan saat mengupload file.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File or Folder</h2>\r\n        <p className=\"upload-limit\">Maksimum ukuran file: 1GB</p>\r\n        <div className=\"upload-options\">\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${folderUploaded ? \"disabled\" : \"\"}`}>\r\n              Upload File\r\n              <input type=\"file\" multiple onChange={handleFileUpload} disabled={folderUploaded} />\r\n            </label>\r\n          </div>\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${fileUploaded ? \"disabled\" : \"\"}`}>\r\n              Upload Folder\r\n              <input type=\"file\" webkitdirectory=\"\" directory=\"\" multiple onChange={handleFolderUpload} disabled={fileUploaded} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button className=\"upload-button\" onClick={handleUploadToBackend} disabled={isUploading}>\r\n          {isUploading ? \"Uploading...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n\r\n      {selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <ul>\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index}>\r\n                {file.name}\r\n                {progress[file.name] !== undefined && (\r\n                  <span className=\"progress\"> - {progress[file.name]}%</span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}