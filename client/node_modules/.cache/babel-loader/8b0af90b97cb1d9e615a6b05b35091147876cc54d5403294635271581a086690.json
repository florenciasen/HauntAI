{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [error, setError] = useState(\"\");\n  const handleFileChange = async e => {\n    const files = Array.from(e.target.files);\n    const fileEntries = await getFileEntries(files);\n    const totalSize = fileEntries.reduce((sum, file) => sum + file.size, 0);\n    if (totalSize > 1024 * 1024 * 1024) {\n      // Validasi ukuran maksimal 1GB\n      setError(\"Selected files or folder exceed 1GB. Please upload smaller items.\");\n      setSelectedItems([]);\n    } else {\n      setError(\"\");\n      setSelectedItems(fileEntries);\n    }\n  };\n  const getFileEntries = async files => {\n    const fileEntries = [];\n    for (const file of files) {\n      const entry = file.webkitGetAsEntry ? file.webkitGetAsEntry() : null;\n      if (entry && entry.isDirectory) {\n        await readDirectory(entry, fileEntries);\n      } else {\n        fileEntries.push(file);\n      }\n    }\n    return fileEntries;\n  };\n  const readDirectory = async (directoryEntry, fileEntries) => {\n    const reader = directoryEntry.createReader();\n    const entries = await new Promise(resolve => reader.readEntries(resolve));\n    for (const entry of entries) {\n      if (entry.isFile) {\n        const file = await new Promise(resolve => entry.file(resolve));\n        fileEntries.push(file);\n      } else if (entry.isDirectory) {\n        await readDirectory(entry, fileEntries);\n      }\n    }\n  };\n  const handleUpload = async () => {\n    if (selectedItems.length === 0) {\n      alert(\"Please select a file or folder.\");\n      return;\n    }\n    console.log(\"Uploading:\");\n    selectedItems.forEach(file => console.log(\"File:\", file.name));\n    alert(\"Upload successful!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: \"HauntAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Upload Your File or Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: \"You can upload single files or folders. Maximum size: 1GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange,\n            className: \"file-input\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            disabled: selectedItems.length === 0,\n            className: \"upload-button\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"GmwbO0F9OnffpgQJGBZuAg/RnJY=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","selectedItems","setSelectedItems","error","setError","handleFileChange","e","files","Array","from","target","fileEntries","getFileEntries","totalSize","reduce","sum","file","size","entry","webkitGetAsEntry","isDirectory","readDirectory","push","directoryEntry","reader","createReader","entries","Promise","resolve","readEntries","isFile","handleUpload","length","alert","console","log","forEach","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","multiple","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleFileChange = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    const fileEntries = await getFileEntries(files);\r\n\r\n    const totalSize = fileEntries.reduce((sum, file) => sum + file.size, 0);\r\n    if (totalSize > 1024 * 1024 * 1024) { // Validasi ukuran maksimal 1GB\r\n      setError(\"Selected files or folder exceed 1GB. Please upload smaller items.\");\r\n      setSelectedItems([]);\r\n    } else {\r\n      setError(\"\");\r\n      setSelectedItems(fileEntries);\r\n    }\r\n  };\r\n\r\n  const getFileEntries = async (files) => {\r\n    const fileEntries = [];\r\n    for (const file of files) {\r\n      const entry = file.webkitGetAsEntry ? file.webkitGetAsEntry() : null;\r\n      if (entry && entry.isDirectory) {\r\n        await readDirectory(entry, fileEntries);\r\n      } else {\r\n        fileEntries.push(file);\r\n      }\r\n    }\r\n    return fileEntries;\r\n  };\r\n\r\n  const readDirectory = async (directoryEntry, fileEntries) => {\r\n    const reader = directoryEntry.createReader();\r\n    const entries = await new Promise((resolve) => reader.readEntries(resolve));\r\n    for (const entry of entries) {\r\n      if (entry.isFile) {\r\n        const file = await new Promise((resolve) => entry.file(resolve));\r\n        fileEntries.push(file);\r\n      } else if (entry.isDirectory) {\r\n        await readDirectory(entry, fileEntries);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedItems.length === 0) {\r\n      alert(\"Please select a file or folder.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Uploading:\");\r\n    selectedItems.forEach((file) => console.log(\"File:\", file.name));\r\n    alert(\"Upload successful!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-brand\">HauntAI</div>\r\n      </nav>\r\n      <div className=\"container\">\r\n        <div className=\"card-container\">\r\n          <div className=\"card\">\r\n            <h1 className=\"title\">Upload Your File or Folder</h1>\r\n            <p className=\"description\">You can upload single files or folders. Maximum size: 1GB</p>\r\n            <input\r\n              type=\"file\"\r\n              onChange={handleFileChange}\r\n              className=\"file-input\"\r\n              multiple\r\n            />\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            <button\r\n              onClick={handleUpload}\r\n              disabled={selectedItems.length === 0}\r\n              className=\"upload-button\"\r\n            >\r\n              Upload\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}