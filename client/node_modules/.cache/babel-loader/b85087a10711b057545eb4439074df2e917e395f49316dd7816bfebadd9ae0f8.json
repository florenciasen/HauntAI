{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\",\n    analysisResults: []\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [fileProgress, setFileProgress] = useState({});\n  const [timestamp, setTimestamp] = useState(null);\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\n\n  const handleFileUpload = event => {\n    const files = Array.from(event.target.files);\n    setSelectedFiles(files);\n  };\n  const handleFolderUpload = event => {\n    const files = Array.from(event.target.files);\n    setSelectedFiles(files);\n  };\n  const uploadChunk = async (file, start, chunk, timestamp) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\n    }\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\n    setFileProgress(prev => ({\n      ...prev,\n      [file.name]: progress\n    }));\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"No files selected.\");\n      return;\n    }\n    setIsUploading(true);\n    const currentTimestamp = new Date().toISOString().replace(/[-:.]/g, \"\");\n    setTimestamp(currentTimestamp);\n    try {\n      for (const file of selectedFiles) {\n        let start = 0;\n        while (start < file.size) {\n          const chunk = file.slice(start, start + CHUNK_SIZE);\n          await uploadChunk(file, start, chunk, currentTimestamp);\n          start += CHUNK_SIZE;\n        }\n        setFileProgress(prev => ({\n          ...prev,\n          [file.name]: 100\n        }));\n      }\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          timestamp: currentTimestamp\n        })\n      });\n      if (!finalizeResponse.ok) {\n        throw new Error(\"Upload finalization failed.\");\n      }\n      const result = await finalizeResponse.json();\n      setUploadStatus({\n        uploaded: true,\n        analyzed: false,\n        message: result.message,\n        analysisResults: []\n      });\n      alert(\"Upload berhasil! Mulai analisis AI...\");\n      handleAnalyzeFiles(currentTimestamp);\n    } catch (error) {\n      alert(\"Upload error: \" + error.message);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleAnalyzeFiles = async timestamp => {\n    setIsAnalyzing(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze-files\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          timestamp\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Analysis failed.\");\n      }\n      const result = await response.json();\n      setUploadStatus(prev => ({\n        ...prev,\n        analyzed: true,\n        analysisResults: result.sensitive_data_files\n      }));\n      alert(\"Analysis completed!\");\n    } catch (error) {\n      alert(\"Analysis error: \" + error.message);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const downloadAnalysis = filename => {\n    window.open(`http://localhost:5000/download-analysis?filename=${filename}`, \"_blank\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File atau Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maksimum ukuran file: 1GB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"upload-label\",\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"upload-label\",\n            children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              webkitdirectory: \"\",\n              directory: \"\",\n              multiple: true,\n              onChange: handleFolderUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        disabled: isUploading,\n        children: isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), fileProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: `${fileProgress[file.name]}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-text\",\n              children: [fileProgress[file.name], \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }, this), uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"download-button\",\n            onClick: () => downloadAnalysis(file.name),\n            children: \"Download Hasil Analisis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), uploadStatus.uploaded && !uploadStatus.analyzed && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"analyze-button\",\n      onClick: () => handleAnalyzeFiles(),\n      disabled: isAnalyzing,\n      children: isAnalyzing ? \"Analyzing...\" : \"Analyze with AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), uploadStatus.analyzed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hasil Analisis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), uploadStatus.analysisResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadStatus.analysisResults.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tidak ada file sensitif terdeteksi.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"7zA+WJZB94x2GPAoipjx46Ikr7w=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","analysisResults","isUploading","setIsUploading","isAnalyzing","setIsAnalyzing","fileProgress","setFileProgress","timestamp","setTimestamp","CHUNK_SIZE","handleFileUpload","event","files","Array","from","target","handleFolderUpload","uploadChunk","file","start","chunk","formData","FormData","append","size","name","response","fetch","method","body","ok","Error","statusText","progress","Math","min","round","prev","handleUploadToBackend","length","alert","currentTimestamp","Date","toISOString","replace","slice","finalizeResponse","headers","JSON","stringify","result","json","handleAnalyzeFiles","error","sensitive_data_files","downloadAnalysis","filename","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","webkitdirectory","directory","onClick","disabled","map","index","undefined","style","width","includes","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\",\r\n    analysisResults: [],\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [fileProgress, setFileProgress] = useState({});\r\n  const [timestamp, setTimestamp] = useState(null);\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    setSelectedFiles(files);\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    setSelectedFiles(files);\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk, timestamp) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n\r\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\r\n    }\r\n\r\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\r\n    setFileProgress((prev) => ({ ...prev, [file.name]: progress }));\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      alert(\"No files selected.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const currentTimestamp = new Date().toISOString().replace(/[-:.]/g, \"\");\r\n    setTimestamp(currentTimestamp);\r\n\r\n    try {\r\n      for (const file of selectedFiles) {\r\n        let start = 0;\r\n        while (start < file.size) {\r\n          const chunk = file.slice(start, start + CHUNK_SIZE);\r\n          await uploadChunk(file, start, chunk, currentTimestamp);\r\n          start += CHUNK_SIZE;\r\n        }\r\n        setFileProgress((prev) => ({ ...prev, [file.name]: 100 }));\r\n      }\r\n\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ timestamp: currentTimestamp }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) {\r\n        throw new Error(\"Upload finalization failed.\");\r\n      }\r\n\r\n      const result = await finalizeResponse.json();\r\n      setUploadStatus({\r\n        uploaded: true,\r\n        analyzed: false,\r\n        message: result.message,\r\n        analysisResults: [],\r\n      });\r\n\r\n      alert(\"Upload berhasil! Mulai analisis AI...\");\r\n      handleAnalyzeFiles(currentTimestamp);\r\n    } catch (error) {\r\n      alert(\"Upload error: \" + error.message);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnalyzeFiles = async (timestamp) => {\r\n    setIsAnalyzing(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze-files\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ timestamp }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Analysis failed.\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      setUploadStatus((prev) => ({\r\n        ...prev,\r\n        analyzed: true,\r\n        analysisResults: result.sensitive_data_files,\r\n      }));\r\n\r\n      alert(\"Analysis completed!\");\r\n    } catch (error) {\r\n      alert(\"Analysis error: \" + error.message);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const downloadAnalysis = (filename) => {\r\n    window.open(`http://localhost:5000/download-analysis?filename=${filename}`, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n\r\n      {/* Upload Section */}\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File atau Folder</h2>\r\n        <p className=\"upload-limit\">Maksimum ukuran file: 1GB</p>\r\n\r\n        <div className=\"upload-options\">\r\n          <div className=\"upload-box\">\r\n            <label className=\"upload-label\">\r\n              Upload File\r\n              <input type=\"file\" multiple onChange={handleFileUpload} />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"upload-box\">\r\n            <label className=\"upload-label\">\r\n              Upload Folder\r\n              <input type=\"file\" webkitdirectory=\"\" directory=\"\" multiple onChange={handleFolderUpload} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"upload-button\" onClick={handleUploadToBackend} disabled={isUploading}>\r\n          {isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* File List with Progress */}\r\n      {selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <ul>\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index} className=\"file-list-item\">\r\n                <span className=\"file-name\">{file.name}</span>\r\n\r\n                {/* Progress Bar */}\r\n                {fileProgress[file.name] !== undefined && (\r\n                  <div className=\"progress-bar\">\r\n                    <div className=\"progress\" style={{ width: `${fileProgress[file.name]}%` }}></div>\r\n                    <span className=\"progress-text\">{fileProgress[file.name]}%</span>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Download Analysis Button */}\r\n                {uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && (\r\n                  <button className=\"download-button\" onClick={() => downloadAnalysis(file.name)}>\r\n                    Download Hasil Analisis\r\n                  </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* AI Analysis Button */}\r\n      {uploadStatus.uploaded && !uploadStatus.analyzed && (\r\n        <button className=\"analyze-button\" onClick={() => handleAnalyzeFiles()} disabled={isAnalyzing}>\r\n          {isAnalyzing ? \"Analyzing...\" : \"Analyze with AI\"}\r\n        </button>\r\n      )}\r\n\r\n      {/* Analysis Results */}\r\n      {uploadStatus.analyzed && (\r\n        <div className=\"analysis-results\">\r\n          <h3>Hasil Analisis:</h3>\r\n          {uploadStatus.analysisResults.length > 0 ? (\r\n            <ul>\r\n              {uploadStatus.analysisResults.map((file, index) => (\r\n                <li key={index}>{file}</li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>Tidak ada file sensitif terdeteksi.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}