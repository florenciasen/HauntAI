{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [folderContents, setFolderContents] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\",\n    sensitiveDataFiles: [] // To store files with sensitive data\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [fileProgress, setFileProgress] = useState({}); // Track progress per file\n\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\n\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n      console.log(`Selected ${files.length} files for upload`);\n    }\n  };\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    let fileList = [];\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\")) {\n        fileList.push(files[i]);\n      }\n    }\n    if (fileList.length > 0) {\n      setSelectedFiles(fileList);\n      setFolderUploaded(true);\n      setFileUploaded(false);\n      setFolderContents(fileList.map(file => file.name));\n      console.log(`Selected ${fileList.length} files from folder`);\n    } else {\n      console.warn(\"No .js or .py files found in folder\");\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\n      setFolderUploaded(false);\n    }\n  };\n  const uploadChunk = async (file, start, chunk, sessionId) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"sessionId\", sessionId);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\n    }\n    const result = await response.json();\n    console.log(`Chunk upload response:`, result);\n\n    // Update progress for this specific file\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: progress // Update progress for this file\n    }));\n    return result;\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      console.warn(\"No files selected for upload\");\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    const sessionId = Date.now().toString();\n    console.log(`Starting upload session: ${sessionId}`);\n    try {\n      for (const file of selectedFiles) {\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\n        let start = 0;\n        while (start < file.size) {\n          const chunk = file.slice(start, start + CHUNK_SIZE);\n          await uploadChunk(file, start, chunk, sessionId);\n          start += CHUNK_SIZE;\n        }\n        // Once the file is uploaded, update progress to 100%\n        setFileProgress(prevProgress => ({\n          ...prevProgress,\n          [file.name]: 100\n        }));\n        console.log(`Completed uploading file: ${file.name}`);\n      }\n      console.log(\"All files uploaded, finalizing...\");\n      setUploadStatus(prevStatus => ({\n        ...prevStatus,\n        message: \"Files uploaded successfully!\"\n      }));\n\n      // Start analyzing the file after upload\n      setUploadStatus(prevStatus => ({\n        ...prevStatus,\n        message: \"Analyzing file...\",\n        analyzed: false\n      }));\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId,\n          files: selectedFiles.map(f => ({\n            filename: f.name,\n            size: f.size\n          }))\n        })\n      });\n      if (!finalizeResponse.ok) {\n        throw new Error(\"Failed to finalize upload\");\n      }\n      const result = await finalizeResponse.json();\n      console.log(\"Upload and analysis finalized:\", result);\n      setUploadStatus({\n        uploaded: true,\n        analyzed: true,\n        // After analysis is done\n        message: result.message,\n        sensitiveDataFiles: result.sensitive_data_files || [] // Display files with sensitive data\n      });\n      alert(\"Upload dan analisis selesai!\");\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setUploadStatus({\n        uploaded: false,\n        analyzed: false,\n        message: error.message,\n        sensitiveDataFiles: []\n      });\n      alert(\"Terjadi kesalahan saat mengupload atau menganalisis file.\");\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const downloadAnalysis = file => {\n    // Trigger file download (you may implement logic for downloading actual analysis)\n    const blob = new Blob([JSON.stringify(file)], {\n      type: \"application/json\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = `${file.filename}_analysis.json`;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File or Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maksimum ukuran file: 1GB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${folderUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileUpload,\n              disabled: folderUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${fileUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              webkitdirectory: \"\",\n              directory: \"\",\n              multiple: true,\n              onChange: handleFolderUpload,\n              disabled: fileUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        children: isUploading ? \"Uploading...\" : uploadStatus.analyzed ? \"Analyzing...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, fileProgress[file.name] !== undefined &&\n          /*#__PURE__*/\n          // Ensure we display progress only if available\n          _jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              fontSize: \"12px\"\n            },\n            children: [fileProgress[file.name], \"% \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), uploadStatus.analyzed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Analysis Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadStatus.sensitiveDataFiles.length > 0 ? uploadStatus.sensitiveDataFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => downloadAnalysis({\n              filename: file\n            }),\n            children: \"Download Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 26\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No sensitive data found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"dxT4oKS34RyzwTaOyf7gKHI2aDM=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","folderContents","setFolderContents","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","sensitiveDataFiles","isUploading","setIsUploading","fileProgress","setFileProgress","CHUNK_SIZE","handleFileUpload","event","files","target","length","Array","from","console","log","handleFolderUpload","fileList","i","name","endsWith","push","map","file","warn","alert","uploadChunk","start","chunk","sessionId","formData","FormData","append","size","response","fetch","method","body","ok","Error","statusText","result","json","progress","Math","min","round","prevProgress","handleUploadToBackend","Date","now","toString","slice","prevStatus","finalizeResponse","headers","JSON","stringify","f","filename","sensitive_data_files","error","downloadAnalysis","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","multiple","onChange","disabled","webkitdirectory","directory","onClick","index","undefined","style","marginLeft","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [folderContents, setFolderContents] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\",\r\n    sensitiveDataFiles: [], // To store files with sensitive data\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [fileProgress, setFileProgress] = useState({}); // Track progress per file\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n      console.log(`Selected ${files.length} files for upload`);\r\n    }\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = event.target.files;\r\n    let fileList = [];\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\")) {\r\n        fileList.push(files[i]);\r\n      }\r\n    }\r\n    if (fileList.length > 0) {\r\n      setSelectedFiles(fileList);\r\n      setFolderUploaded(true);\r\n      setFileUploaded(false);\r\n      setFolderContents(fileList.map(file => file.name));\r\n      console.log(`Selected ${fileList.length} files from folder`);\r\n    } else {\r\n      console.warn(\"No .js or .py files found in folder\");\r\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk, sessionId) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"sessionId\", sessionId);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n\r\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\r\n\r\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\r\n    }\r\n    const result = await response.json();\r\n    console.log(`Chunk upload response:`, result);\r\n\r\n    // Update progress for this specific file\r\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\r\n    setFileProgress((prevProgress) => ({\r\n      ...prevProgress,\r\n      [file.name]: progress, // Update progress for this file\r\n    }));\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      console.warn(\"No files selected for upload\");\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const sessionId = Date.now().toString();\r\n    console.log(`Starting upload session: ${sessionId}`);\r\n\r\n    try {\r\n      for (const file of selectedFiles) {\r\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\r\n        let start = 0;\r\n        while (start < file.size) {\r\n          const chunk = file.slice(start, start + CHUNK_SIZE);\r\n          await uploadChunk(file, start, chunk, sessionId);\r\n          start += CHUNK_SIZE;\r\n        }\r\n        // Once the file is uploaded, update progress to 100%\r\n        setFileProgress((prevProgress) => ({\r\n          ...prevProgress,\r\n          [file.name]: 100,\r\n        }));\r\n        console.log(`Completed uploading file: ${file.name}`);\r\n      }\r\n\r\n      console.log(\"All files uploaded, finalizing...\");\r\n      setUploadStatus((prevStatus) => ({\r\n        ...prevStatus,\r\n        message: \"Files uploaded successfully!\",\r\n      }));\r\n\r\n      // Start analyzing the file after upload\r\n      setUploadStatus((prevStatus) => ({\r\n        ...prevStatus,\r\n        message: \"Analyzing file...\",\r\n        analyzed: false,\r\n      }));\r\n\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          sessionId,\r\n          files: selectedFiles.map(f => ({ \r\n            filename: f.name, \r\n            size: f.size \r\n          }))\r\n        }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) {\r\n        throw new Error(\"Failed to finalize upload\");\r\n      }\r\n\r\n      const result = await finalizeResponse.json();\r\n      console.log(\"Upload and analysis finalized:\", result);\r\n      \r\n      setUploadStatus({\r\n        uploaded: true,\r\n        analyzed: true,  // After analysis is done\r\n        message: result.message,\r\n        sensitiveDataFiles: result.sensitive_data_files || [],  // Display files with sensitive data\r\n      });\r\n\r\n      alert(\"Upload dan analisis selesai!\");\r\n\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      setUploadStatus({\r\n        uploaded: false,\r\n        analyzed: false,\r\n        message: error.message,\r\n        sensitiveDataFiles: [],\r\n      });\r\n      alert(\"Terjadi kesalahan saat mengupload atau menganalisis file.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const downloadAnalysis = (file) => {\r\n    // Trigger file download (you may implement logic for downloading actual analysis)\r\n    const blob = new Blob([JSON.stringify(file)], { type: \"application/json\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = `${file.filename}_analysis.json`;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File or Folder</h2>\r\n        <p className=\"upload-limit\">Maksimum ukuran file: 1GB</p>\r\n        <div className=\"upload-options\">\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${folderUploaded ? \"disabled\" : \"\"}`}>\r\n              Upload File\r\n              <input type=\"file\" multiple onChange={handleFileUpload} disabled={folderUploaded} />\r\n            </label>\r\n          </div>\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${fileUploaded ? \"disabled\" : \"\"}`}>\r\n              Upload Folder\r\n              <input type=\"file\" webkitdirectory=\"\" directory=\"\" multiple onChange={handleFolderUpload} disabled={fileUploaded} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button className=\"upload-button\" onClick={handleUploadToBackend}>\r\n          {isUploading ? \"Uploading...\" : uploadStatus.analyzed ? \"Analyzing...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n\r\n      {selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <ul>\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index}>\r\n                {file.name}\r\n                {fileProgress[file.name] !== undefined && ( // Ensure we display progress only if available\r\n                  <span style={{ marginLeft: \"10px\", fontSize: \"12px\" }}>\r\n                    {fileProgress[file.name]}% {/* Displaying progress beside the filename */}\r\n                  </span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {uploadStatus.analyzed && (\r\n        <div className=\"analysis-results\">\r\n          <h3>Analysis Results:</h3>\r\n          <ul>\r\n            {uploadStatus.sensitiveDataFiles.length > 0 ? (\r\n              uploadStatus.sensitiveDataFiles.map((file, index) => (\r\n                <li key={index}>\r\n                  {file} <button onClick={() => downloadAnalysis({ filename: file })}>Download Analysis</button>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>No sensitive data found.</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}