{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\",\n    analysisResults: []\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [fileProgress, setFileProgress] = useState({});\n  const [analysisProgress, setAnalysisProgress] = useState({});\n  const CHUNK_SIZE = 1024 * 1024 * 50; // 50MB chunk size\n\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n      console.log(`Selected ${files.length} files for upload`);\n    }\n  };\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    let fileList = [];\n    let fileCount = {}; // Objek untuk menyimpan jumlah file dengan nama yang sama\n\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\") || files[i].name.endsWith(\".env\") || files[i].name.endsWith(\".json\")) {\n        let fileName = files[i].name;\n\n        // Jika file dengan nama yang sama sudah ada, tambahin angka\n        if (fileCount[fileName]) {\n          let count = fileCount[fileName];\n          fileCount[fileName]++;\n          let nameParts = fileName.split(\".\");\n          let newFileName = `${nameParts[0]}(${count}).${nameParts.slice(1).join(\".\")}`;\n          let renamedFile = new File([files[i]], newFileName, {\n            type: files[i].type\n          });\n          fileList.push(renamedFile);\n        } else {\n          fileCount[fileName] = 1;\n          fileList.push(files[i]);\n        }\n      }\n    }\n    if (fileList.length > 0) {\n      setSelectedFiles(fileList);\n      setFolderUploaded(true);\n      setFileUploaded(false);\n      console.log(`Selected ${fileList.length} files from folder`, fileList);\n    } else {\n      console.warn(\"No .js or .py files found in folder\");\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\n      setFolderUploaded(false);\n    }\n  };\n  const addLineNumbersToFile = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileContent = reader.result;\n        const lines = fileContent.split(\"\\n\");\n\n        // Menambahkan nomor baris\n        const linesWithNumbers = lines.map((line, index) => {\n          return `${index + 1}: ${line}`;\n        });\n        const newContent = linesWithNumbers.join(\"\\n\");\n        const newFile = new Blob([newContent], {\n          type: file.type\n        });\n        resolve(newFile); // Return the new file with line numbers added\n      };\n      reader.onerror = reject;\n      reader.readAsText(file);\n    });\n  };\n  const uploadChunk = async (file, start, chunk, sessionId) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"sessionId\", sessionId);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\n    }\n    const result = await response.json();\n    console.log(`Chunk upload response:`, result);\n\n    // Update progress for this specific file\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: progress\n    }));\n    return result;\n  };\n  const analyzeFilesWithGemini = async (savedFiles, uploadFolder) => {\n    setIsAnalyzing(true);\n    console.log(\"Starting Gemini analysis for files:\", savedFiles);\n    try {\n      // Initialize analysis progress for each file\n      const initialProgress = {};\n      savedFiles.forEach(filePath => {\n        const fileName = filePath.split(\"/\").pop();\n        initialProgress[fileName] = 0;\n      });\n      setAnalysisProgress(initialProgress);\n      const analysisResponse = await fetch(\"http://localhost:5000/analyze-files\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          files: savedFiles,\n          folder: uploadFolder,\n          analysisPrompt: \"Analyze this code and identify any security vulnerabilities, hardcoded credentials, or sensitive data. Also suggest improvements for code quality and performance. Structure your response with clear sections for issues found and recommendations.\"\n        })\n      });\n      if (!analysisResponse.ok) {\n        throw new Error(\"Failed to analyze files with Gemini API\");\n      }\n      const analysisResult = await analysisResponse.json();\n      console.log(\"Analysis completed:\", analysisResult);\n      setUploadStatus(prev => ({\n        ...prev,\n        analyzed: true,\n        analysisResults: analysisResult.analyzed_files || []\n      }));\n      alert(\"Analysis complete! You can now view the results.\");\n    } catch (error) {\n      console.error(\"Analysis error:\", error);\n      alert(\"Error analyzing files: \" + error.message);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      console.warn(\"No files selected for upload\");\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    const sessionId = Date.now().toString();\n    console.log(`Starting upload session: ${sessionId}`);\n    try {\n      for (const file of selectedFiles) {\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\n\n        // Menambahkan nomor baris pada file sebelum upload\n        const fileWithLineNumbers = await addLineNumbersToFile(file);\n        let start = 0;\n        while (start < fileWithLineNumbers.size) {\n          const chunk = fileWithLineNumbers.slice(start, start + CHUNK_SIZE);\n          await uploadChunk(file, start, chunk, sessionId);\n          start += CHUNK_SIZE;\n        }\n\n        // Once the file is uploaded, update progress to 100%\n        setFileProgress(prevProgress => ({\n          ...prevProgress,\n          [file.name]: 100\n        }));\n        console.log(`Completed uploading file: ${file.name}`);\n      }\n      console.log(\"All files uploaded, finalizing...\");\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId,\n          files: selectedFiles.map(f => ({\n            filename: f.name,\n            size: f.size\n          }))\n        })\n      });\n      if (!finalizeResponse.ok) throw new Error(\"Failed to finalize upload\");\n      const result = await finalizeResponse.json();\n      console.log(\"Upload finalized:\", result);\n      setUploadStatus(prevStatus => ({\n        ...prevStatus,\n        uploaded: true,\n        analyzed: false,\n        message: result.message,\n        analysisResults: []\n      }));\n      setIsUploading(false); // Pastikan upload status dihentikan\n      setIsAnalyzing(true); // Set analyzing status\n\n      alert(\"Upload berhasil! Now starting analysis...\");\n\n      // Start analyzing files with Gemini after upload completes\n      await analyzeFilesWithGemini(result.saved_files, result.folder);\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setUploadStatus({\n        uploaded: false,\n        analyzed: false,\n        message: error.message\n      });\n      alert(\"Terjadi kesalahan saat mengupload file.\");\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const downloadAnalysis = filename => {\n    const url = `http://localhost:5000/download-analysis?filename=${filename}`;\n    window.open(url, \"_blank\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File or Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maksimum ukuran file: 1GB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${folderUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileUpload,\n              disabled: folderUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${fileUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              webkitdirectory: \"\",\n              directory: \"\",\n              multiple: true,\n              onChange: handleFolderUpload,\n              disabled: fileUploaded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        disabled: isUploading || isAnalyzing,\n        children: isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing with AI...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, isUploading && fileProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              fontSize: \"12px\"\n            },\n            children: [\"Uploading: \", fileProgress[file.name], \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this), isAnalyzing && analysisProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              fontSize: \"12px\"\n            },\n            children: \"Analyzing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }, this), uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => downloadAnalysis(file.name),\n            className: \"download-button\",\n            children: \"Klik to View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"ed/qSHQ0V7xds08ByClcov3oIy4=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","analysisResults","isUploading","setIsUploading","isAnalyzing","setIsAnalyzing","fileProgress","setFileProgress","analysisProgress","setAnalysisProgress","CHUNK_SIZE","handleFileUpload","event","files","target","length","Array","from","console","log","handleFolderUpload","fileList","fileCount","i","name","endsWith","fileName","count","nameParts","split","newFileName","slice","join","renamedFile","File","type","push","warn","alert","addLineNumbersToFile","file","Promise","resolve","reject","reader","FileReader","onload","fileContent","result","lines","linesWithNumbers","map","line","index","newContent","newFile","Blob","onerror","readAsText","uploadChunk","start","chunk","sessionId","formData","FormData","append","size","response","fetch","method","body","ok","Error","statusText","json","progress","Math","min","round","prevProgress","analyzeFilesWithGemini","savedFiles","uploadFolder","initialProgress","forEach","filePath","pop","analysisResponse","headers","JSON","stringify","folder","analysisPrompt","analysisResult","prev","analyzed_files","error","handleUploadToBackend","Date","now","toString","fileWithLineNumbers","finalizeResponse","f","filename","prevStatus","saved_files","downloadAnalysis","url","window","open","className","children","_jsxFileName","lineNumber","columnNumber","multiple","onChange","disabled","webkitdirectory","directory","onClick","undefined","style","marginLeft","fontSize","includes","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\",\r\n    analysisResults: [],\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [fileProgress, setFileProgress] = useState({});\r\n  const [analysisProgress, setAnalysisProgress] = useState({});\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 50; // 50MB chunk size\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n      console.log(`Selected ${files.length} files for upload`);\r\n    }\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = event.target.files;\r\n    let fileList = [];\r\n    let fileCount = {}; // Objek untuk menyimpan jumlah file dengan nama yang sama\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\") || files[i].name.endsWith(\".env\") || files[i].name.endsWith(\".json\")) {\r\n        let fileName = files[i].name;\r\n\r\n        // Jika file dengan nama yang sama sudah ada, tambahin angka\r\n        if (fileCount[fileName]) {\r\n          let count = fileCount[fileName];\r\n          fileCount[fileName]++;\r\n          let nameParts = fileName.split(\".\");\r\n          let newFileName = `${nameParts[0]}(${count}).${nameParts.slice(1).join(\".\")}`;\r\n\r\n          let renamedFile = new File([files[i]], newFileName, { type: files[i].type });\r\n          fileList.push(renamedFile);\r\n        } else {\r\n          fileCount[fileName] = 1;\r\n          fileList.push(files[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (fileList.length > 0) {\r\n      setSelectedFiles(fileList);\r\n      setFolderUploaded(true);\r\n      setFileUploaded(false);\r\n      console.log(`Selected ${fileList.length} files from folder`, fileList);\r\n    } else {\r\n      console.warn(\"No .js or .py files found in folder\");\r\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const addLineNumbersToFile = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const fileContent = reader.result;\r\n        const lines = fileContent.split(\"\\n\");\r\n\r\n        // Menambahkan nomor baris\r\n        const linesWithNumbers = lines.map((line, index) => {\r\n          return `${index + 1}: ${line}`;\r\n        });\r\n\r\n        const newContent = linesWithNumbers.join(\"\\n\");\r\n        const newFile = new Blob([newContent], { type: file.type });\r\n\r\n        resolve(newFile); // Return the new file with line numbers added\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk, sessionId) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"sessionId\", sessionId);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n\r\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\r\n\r\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\r\n    }\r\n    const result = await response.json();\r\n    console.log(`Chunk upload response:`, result);\r\n\r\n    // Update progress for this specific file\r\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\r\n    setFileProgress((prevProgress) => ({\r\n      ...prevProgress,\r\n      [file.name]: progress,\r\n    }));\r\n\r\n    return result;\r\n  };\r\n\r\n  const analyzeFilesWithGemini = async (savedFiles, uploadFolder) => {\r\n    setIsAnalyzing(true);\r\n    console.log(\"Starting Gemini analysis for files:\", savedFiles);\r\n\r\n    try {\r\n      // Initialize analysis progress for each file\r\n      const initialProgress = {};\r\n      savedFiles.forEach((filePath) => {\r\n        const fileName = filePath.split(\"/\").pop();\r\n        initialProgress[fileName] = 0;\r\n      });\r\n      setAnalysisProgress(initialProgress);\r\n\r\n      const analysisResponse = await fetch(\"http://localhost:5000/analyze-files\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          files: savedFiles,\r\n          folder: uploadFolder,\r\n          analysisPrompt:\r\n            \"Analyze this code and identify any security vulnerabilities, hardcoded credentials, or sensitive data. Also suggest improvements for code quality and performance. Structure your response with clear sections for issues found and recommendations.\",\r\n        }),\r\n      });\r\n\r\n      if (!analysisResponse.ok) {\r\n        throw new Error(\"Failed to analyze files with Gemini API\");\r\n      }\r\n\r\n      const analysisResult = await analysisResponse.json();\r\n      console.log(\"Analysis completed:\", analysisResult);\r\n\r\n      setUploadStatus((prev) => ({\r\n        ...prev,\r\n        analyzed: true,\r\n        analysisResults: analysisResult.analyzed_files || [],\r\n      }));\r\n\r\n      alert(\"Analysis complete! You can now view the results.\");\r\n    } catch (error) {\r\n      console.error(\"Analysis error:\", error);\r\n      alert(\"Error analyzing files: \" + error.message);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      console.warn(\"No files selected for upload\");\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const sessionId = Date.now().toString();\r\n    console.log(`Starting upload session: ${sessionId}`);\r\n\r\n    try {\r\n      for (const file of selectedFiles) {\r\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\r\n\r\n        // Menambahkan nomor baris pada file sebelum upload\r\n        const fileWithLineNumbers = await addLineNumbersToFile(file);\r\n\r\n        let start = 0;\r\n        while (start < fileWithLineNumbers.size) {\r\n          const chunk = fileWithLineNumbers.slice(start, start + CHUNK_SIZE);\r\n          await uploadChunk(file, start, chunk, sessionId);\r\n          start += CHUNK_SIZE;\r\n        }\r\n\r\n        // Once the file is uploaded, update progress to 100%\r\n        setFileProgress((prevProgress) => ({\r\n          ...prevProgress,\r\n          [file.name]: 100,\r\n        }));\r\n        console.log(`Completed uploading file: ${file.name}`);\r\n      }\r\n\r\n      console.log(\"All files uploaded, finalizing...\");\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          sessionId,\r\n          files: selectedFiles.map((f) => ({\r\n            filename: f.name,\r\n            size: f.size,\r\n          })),\r\n        }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) throw new Error(\"Failed to finalize upload\");\r\n\r\n      const result = await finalizeResponse.json();\r\n      console.log(\"Upload finalized:\", result);\r\n\r\n      setUploadStatus((prevStatus) => ({\r\n        ...prevStatus,\r\n        uploaded: true,\r\n        analyzed: false,\r\n        message: result.message,\r\n        analysisResults: [],\r\n      }));\r\n\r\n      setIsUploading(false); // Pastikan upload status dihentikan\r\n      setIsAnalyzing(true); // Set analyzing status\r\n\r\n      alert(\"Upload berhasil! Now starting analysis...\");\r\n\r\n      // Start analyzing files with Gemini after upload completes\r\n      await analyzeFilesWithGemini(result.saved_files, result.folder);\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      setUploadStatus({\r\n        uploaded: false,\r\n        analyzed: false,\r\n        message: error.message,\r\n      });\r\n      alert(\"Terjadi kesalahan saat mengupload file.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const downloadAnalysis = (filename) => {\r\n    const url = `http://localhost:5000/download-analysis?filename=${filename}`;\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File or Folder</h2>\r\n        <p className=\"upload-limit\">Maksimum ukuran file: 1GB</p>\r\n        <div className=\"upload-options\">\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${folderUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload File\r\n              <input type=\"file\" multiple onChange={handleFileUpload} disabled={folderUploaded} />\r\n            </label>\r\n          </div>\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${fileUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload Folder\r\n              <input type=\"file\" webkitdirectory=\"\" directory=\"\" multiple onChange={handleFolderUpload} disabled={fileUploaded} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button className=\"upload-button\" onClick={handleUploadToBackend} disabled={isUploading || isAnalyzing}>\r\n          {isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing with AI...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n\r\n      {selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <ul>\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index}>\r\n                {file.name}\r\n                {isUploading && fileProgress[file.name] !== undefined && (\r\n                  <span style={{ marginLeft: \"10px\", fontSize: \"12px\" }}>\r\n                    Uploading: {fileProgress[file.name]}%\r\n                  </span>\r\n                )}\r\n                {isAnalyzing && analysisProgress[file.name] !== undefined && (\r\n                  <span style={{ marginLeft: \"10px\", fontSize: \"12px\" }}>\r\n                    Analyzing...\r\n                  </span>\r\n                )}\r\n                {/* Tombol Download Hasil Analisis */}\r\n                {uploadStatus.analyzed && uploadStatus.analysisResults.includes(file.name) && (\r\n                  <button onClick={() => downloadAnalysis(file.name)} className=\"download-button\">\r\n                    Klik to View\r\n                  </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}