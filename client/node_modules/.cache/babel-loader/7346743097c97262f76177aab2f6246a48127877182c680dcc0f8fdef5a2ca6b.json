{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [folderContents, setFolderContents] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\",\n    analysisResults: {},\n    sensitiveFiles: []\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [fileProgress, setFileProgress] = useState({});\n  const [timestamp, setTimestamp] = useState(\"\");\n  const CHUNK_SIZE = 1024 * 1024 * 50; // 50MB to match backend\n\n  // Periodically check upload status from backend\n  useEffect(() => {\n    let statusInterval;\n    if (isUploading || isAnalyzing) {\n      statusInterval = setInterval(async () => {\n        try {\n          const response = await fetch(\"http://localhost:5000/status\");\n          const statusData = await response.json();\n          if (statusData.uploaded && !statusData.analyzed && isUploading) {\n            setIsUploading(false);\n            setIsAnalyzing(true);\n          }\n          if (statusData.analyzed && isAnalyzing) {\n            setIsAnalyzing(false);\n            setUploadStatus(prev => ({\n              ...prev,\n              analyzed: true,\n              sensitiveFiles: statusData.sensitive_data_files\n            }));\n          }\n        } catch (error) {\n          console.error(\"Error checking status:\", error);\n        }\n      }, 2000);\n    }\n    return () => {\n      if (statusInterval) clearInterval(statusInterval);\n    };\n  }, [isUploading, isAnalyzing]);\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n      console.log(`Selected ${files.length} files for upload`);\n    }\n  };\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    let fileList = [];\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\")) {\n        fileList.push(files[i]);\n      }\n    }\n    if (fileList.length > 0) {\n      setSelectedFiles(fileList);\n      setFolderUploaded(true);\n      setFileUploaded(false);\n      setFolderContents(fileList.map(file => file.name));\n      console.log(`Selected ${fileList.length} files from folder`);\n    } else {\n      console.warn(\"No .js or .py files found in folder\");\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\n      setFolderUploaded(false);\n    }\n  };\n  const uploadChunk = async (file, start, chunk) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk);\n    formData.append(\"start\", start);\n    formData.append(\"total_size\", file.size);\n    formData.append(\"filename\", file.name);\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\n    }\n    const result = await response.json();\n    console.log(`Chunk upload response:`, result);\n\n    // Update progress for this specific file\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\n    setFileProgress(prevProgress => ({\n      ...prevProgress,\n      [file.name]: progress\n    }));\n    return result;\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      console.warn(\"No files selected for upload\");\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    // Timestamp will be generated on the backend side\n    const currentTimestamp = new Date().toISOString().replace(/[T:]/g, \"_\").split(\".\")[0];\n    setTimestamp(currentTimestamp);\n    try {\n      for (const file of selectedFiles) {\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\n        setFileProgress(prevProgress => ({\n          ...prevProgress,\n          [file.name]: 0\n        }));\n        let start = 0;\n        while (start < file.size) {\n          const chunk = file.slice(start, start + CHUNK_SIZE);\n          await uploadChunk(file, start, chunk);\n          start += CHUNK_SIZE;\n        }\n        console.log(`Completed uploading file: ${file.name}`);\n      }\n      console.log(\"All files uploaded, finalizing...\");\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({}) // The backend generates timestamp internally\n      });\n      if (!finalizeResponse.ok) {\n        throw new Error(\"Failed to finalize upload\");\n      }\n      const result = await finalizeResponse.json();\n      console.log(\"Upload finalized:\", result);\n\n      // Extract timestamp from the backend response if available\n      if (result.saved_files && result.saved_files.length > 0) {\n        const filePath = result.saved_files[0];\n        const pathParts = filePath.split('/');\n        // Assuming the timestamp is always the second-to-last part in the path\n        const extractedTimestamp = pathParts[pathParts.length - 2];\n        setTimestamp(extractedTimestamp);\n      }\n      setUploadStatus({\n        uploaded: true,\n        analyzed: false,\n        message: result.message,\n        analysisResults: {},\n        sensitiveFiles: []\n      });\n      alert(\"Upload berhasil! Memulai analisis...\");\n      analyzeFiles();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setUploadStatus({\n        uploaded: false,\n        analyzed: false,\n        message: error.message,\n        analysisResults: {},\n        sensitiveFiles: []\n      });\n      alert(\"Terjadi kesalahan saat mengupload file.\");\n      setIsUploading(false);\n      setIsAnalyzing(false);\n    }\n  };\n  const analyzeFiles = async () => {\n    setIsAnalyzing(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze-files\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          timestamp: timestamp\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to analyze files\");\n      }\n      const result = await response.json();\n      console.log(\"Analysis completed:\", result);\n      setUploadStatus({\n        uploaded: true,\n        analyzed: true,\n        message: \"Analysis completed successfully\",\n        analysisResults: result.results || {},\n        sensitiveFiles: result.sensitive_data_files || []\n      });\n      alert(\"Analisis selesai!\");\n    } catch (error) {\n      console.error(\"Analysis error:\", error);\n      setUploadStatus(prev => ({\n        ...prev,\n        message: `Analisis gagal: ${error.message}`\n      }));\n      alert(\"Terjadi kesalahan saat menganalisis file.\");\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const viewAnalysisResult = filename => {\n    if (uploadStatus.analysisResults[filename]) {\n      alert(`Hasil analisis untuk ${filename}:\\n\\n${uploadStatus.analysisResults[filename]}`);\n    } else {\n      alert(`Belum ada hasil analisis untuk ${filename}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File or Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-limit\",\n        children: \"Maksimum ukuran file: 30GB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${folderUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              onChange: handleFileUpload,\n              disabled: folderUploaded || isUploading || isAnalyzing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `upload-label ${fileUploaded ? \"disabled\" : \"\"}`,\n            children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              webkitdirectory: \"\",\n              directory: \"\",\n              multiple: true,\n              onChange: handleFolderUpload,\n              disabled: fileUploaded || isUploading || isAnalyzing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUploadToBackend,\n        disabled: isUploading || isAnalyzing || selectedFiles.length === 0,\n        children: isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File yang Akan Diupload:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), fileProgress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: `${fileProgress[file.name]}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-text\",\n                children: [fileProgress[file.name], \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), uploadStatus.analyzed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => viewAnalysisResult(file.name),\n              className: `analysis-button ${uploadStatus.sensitiveFiles.includes(file.name) ? \"sensitive\" : \"\"}`,\n              children: [\"Lihat Hasil Analisis\", uploadStatus.sensitiveFiles.includes(file.name) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sensitive-badge\",\n                children: \"Sensitif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), (isUploading || isAnalyzing || uploadStatus.analyzed) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isUploading ? \"Mengupload file...\" : isAnalyzing ? \"Menganalisis file dengan AI...\" : uploadStatus.analyzed ? `Analisis selesai. ${uploadStatus.sensitiveFiles.length} file berisi data sensitif.` : uploadStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), uploadStatus.analyzed && uploadStatus.sensitiveFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensitive-files-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"File dengan data sensitif:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uploadStatus.sensitiveFiles.map((filename, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: filename\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"p6t5Jp1vSLjGQ518QxEzJ6/RbJc=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","folderContents","setFolderContents","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","analysisResults","sensitiveFiles","isUploading","setIsUploading","isAnalyzing","setIsAnalyzing","fileProgress","setFileProgress","timestamp","setTimestamp","CHUNK_SIZE","statusInterval","setInterval","response","fetch","statusData","json","prev","sensitive_data_files","error","console","clearInterval","handleFileUpload","event","files","target","length","Array","from","log","handleFolderUpload","fileList","i","name","endsWith","push","map","file","warn","alert","uploadChunk","start","chunk","formData","FormData","append","size","method","body","ok","Error","statusText","result","progress","Math","min","round","prevProgress","handleUploadToBackend","currentTimestamp","Date","toISOString","replace","split","slice","finalizeResponse","headers","JSON","stringify","saved_files","filePath","pathParts","extractedTimestamp","analyzeFiles","results","viewAnalysisResult","filename","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","disabled","webkitdirectory","directory","onClick","index","undefined","style","width","includes","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [folderContents, setFolderContents] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\",\r\n    analysisResults: {},\r\n    sensitiveFiles: []\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [fileProgress, setFileProgress] = useState({});\r\n  const [timestamp, setTimestamp] = useState(\"\");\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 50; // 50MB to match backend\r\n\r\n  // Periodically check upload status from backend\r\n  useEffect(() => {\r\n    let statusInterval;\r\n    if (isUploading || isAnalyzing) {\r\n      statusInterval = setInterval(async () => {\r\n        try {\r\n          const response = await fetch(\"http://localhost:5000/status\");\r\n          const statusData = await response.json();\r\n          \r\n          if (statusData.uploaded && !statusData.analyzed && isUploading) {\r\n            setIsUploading(false);\r\n            setIsAnalyzing(true);\r\n          }\r\n          \r\n          if (statusData.analyzed && isAnalyzing) {\r\n            setIsAnalyzing(false);\r\n            setUploadStatus(prev => ({\r\n              ...prev,\r\n              analyzed: true,\r\n              sensitiveFiles: statusData.sensitive_data_files\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error checking status:\", error);\r\n        }\r\n      }, 2000);\r\n    }\r\n    \r\n    return () => {\r\n      if (statusInterval) clearInterval(statusInterval);\r\n    };\r\n  }, [isUploading, isAnalyzing]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n      console.log(`Selected ${files.length} files for upload`);\r\n    }\r\n  };\r\n\r\n  const handleFolderUpload = (event) => {\r\n    const files = event.target.files;\r\n    let fileList = [];\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].name.endsWith(\".js\") || files[i].name.endsWith(\".py\")) {\r\n        fileList.push(files[i]);\r\n      }\r\n    }\r\n    if (fileList.length > 0) {\r\n      setSelectedFiles(fileList);\r\n      setFolderUploaded(true);\r\n      setFileUploaded(false);\r\n      setFolderContents(fileList.map(file => file.name));\r\n      console.log(`Selected ${fileList.length} files from folder`);\r\n    } else {\r\n      console.warn(\"No .js or .py files found in folder\");\r\n      alert(\"Tidak ada file dengan ekstensi .js atau .py yang ditemukan.\");\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const uploadChunk = async (file, start, chunk) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chunk);\r\n    formData.append(\"start\", start);\r\n    formData.append(\"total_size\", file.size);\r\n    formData.append(\"filename\", file.name);\r\n\r\n    console.log(`Uploading chunk for ${file.name}: ${start}-${start + chunk.size} of ${file.size}`);\r\n\r\n    const response = await fetch(\"http://localhost:5000/upload-chunk\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Upload chunk failed: ${response.statusText}`);\r\n    }\r\n    const result = await response.json();\r\n    console.log(`Chunk upload response:`, result);\r\n\r\n    // Update progress for this specific file\r\n    const progress = Math.min(Math.round((start + chunk.size) / file.size * 100), 100);\r\n    setFileProgress((prevProgress) => ({\r\n      ...prevProgress,\r\n      [file.name]: progress,\r\n    }));\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      console.warn(\"No files selected for upload\");\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    // Timestamp will be generated on the backend side\r\n    const currentTimestamp = new Date().toISOString().replace(/[T:]/g, \"_\").split(\".\")[0];\r\n    setTimestamp(currentTimestamp);\r\n    \r\n    try {\r\n      for (const file of selectedFiles) {\r\n        console.log(`Processing file: ${file.name} (${file.size} bytes)`);\r\n        setFileProgress((prevProgress) => ({\r\n          ...prevProgress,\r\n          [file.name]: 0,\r\n        }));\r\n        \r\n        let start = 0;\r\n        while (start < file.size) {\r\n          const chunk = file.slice(start, start + CHUNK_SIZE);\r\n          await uploadChunk(file, start, chunk);\r\n          start += CHUNK_SIZE;\r\n        }\r\n        \r\n        console.log(`Completed uploading file: ${file.name}`);\r\n      }\r\n\r\n      console.log(\"All files uploaded, finalizing...\");\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({}), // The backend generates timestamp internally\r\n      });\r\n\r\n      if (!finalizeResponse.ok) {\r\n        throw new Error(\"Failed to finalize upload\");\r\n      }\r\n\r\n      const result = await finalizeResponse.json();\r\n      console.log(\"Upload finalized:\", result);\r\n      \r\n      // Extract timestamp from the backend response if available\r\n      if (result.saved_files && result.saved_files.length > 0) {\r\n        const filePath = result.saved_files[0];\r\n        const pathParts = filePath.split('/');\r\n        // Assuming the timestamp is always the second-to-last part in the path\r\n        const extractedTimestamp = pathParts[pathParts.length - 2];\r\n        setTimestamp(extractedTimestamp);\r\n      }\r\n\r\n      setUploadStatus({\r\n        uploaded: true,\r\n        analyzed: false,\r\n        message: result.message,\r\n        analysisResults: {},\r\n        sensitiveFiles: []\r\n      });\r\n\r\n      alert(\"Upload berhasil! Memulai analisis...\");\r\n      analyzeFiles();\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      setUploadStatus({\r\n        uploaded: false,\r\n        analyzed: false,\r\n        message: error.message,\r\n        analysisResults: {},\r\n        sensitiveFiles: []\r\n      });\r\n      alert(\"Terjadi kesalahan saat mengupload file.\");\r\n      setIsUploading(false);\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const analyzeFiles = async () => {\r\n    setIsAnalyzing(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze-files\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          timestamp: timestamp\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to analyze files\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"Analysis completed:\", result);\r\n\r\n      setUploadStatus({\r\n        uploaded: true,\r\n        analyzed: true,\r\n        message: \"Analysis completed successfully\",\r\n        analysisResults: result.results || {},\r\n        sensitiveFiles: result.sensitive_data_files || []\r\n      });\r\n\r\n      alert(\"Analisis selesai!\");\r\n    } catch (error) {\r\n      console.error(\"Analysis error:\", error);\r\n      setUploadStatus(prev => ({\r\n        ...prev,\r\n        message: `Analisis gagal: ${error.message}`,\r\n      }));\r\n      alert(\"Terjadi kesalahan saat menganalisis file.\");\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const viewAnalysisResult = (filename) => {\r\n    if (uploadStatus.analysisResults[filename]) {\r\n      alert(`Hasil analisis untuk ${filename}:\\n\\n${uploadStatus.analysisResults[filename]}`);\r\n    } else {\r\n      alert(`Belum ada hasil analisis untuk ${filename}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File or Folder</h2>\r\n        <p className=\"upload-limit\">Maksimum ukuran file: 30GB</p>\r\n        <div className=\"upload-options\">\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${folderUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload File\r\n              <input type=\"file\" multiple onChange={handleFileUpload} disabled={folderUploaded || isUploading || isAnalyzing} />\r\n            </label>\r\n          </div>\r\n          <div className=\"upload-box\">\r\n            <label className={`upload-label ${fileUploaded ? \"disabled\" : \"\"}`} >\r\n              Upload Folder\r\n              <input type=\"file\" webkitdirectory=\"\" directory=\"\" multiple onChange={handleFolderUpload} disabled={fileUploaded || isUploading || isAnalyzing} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"upload-button\" \r\n          onClick={handleUploadToBackend}\r\n          disabled={isUploading || isAnalyzing || selectedFiles.length === 0}\r\n        >\r\n          {isUploading ? \"Uploading...\" : isAnalyzing ? \"Analyzing...\" : \"Upload\"}\r\n        </button>\r\n      </div>\r\n\r\n      {selectedFiles.length > 0 && (\r\n        <div className=\"folder-content-container\">\r\n          <h3>File yang Akan Diupload:</h3>\r\n          <ul>\r\n            {selectedFiles.map((file, index) => (\r\n              <li key={index} className=\"file-item\">\r\n                <div className=\"file-info\">\r\n                  <span className=\"file-name\">{file.name}</span>\r\n                  {fileProgress[file.name] !== undefined && (\r\n                    <div className=\"progress-container\">\r\n                      <div className=\"progress-bar\" style={{ width: `${fileProgress[file.name]}%` }}></div>\r\n                      <span className=\"progress-text\">{fileProgress[file.name]}%</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Button untuk lihat hasil analisis */}\r\n                {uploadStatus.analyzed && (\r\n                  <div className=\"analysis-controls\">\r\n                    <button \r\n                      onClick={() => viewAnalysisResult(file.name)} \r\n                      className={`analysis-button ${uploadStatus.sensitiveFiles.includes(file.name) ? \"sensitive\" : \"\"}`}\r\n                    >\r\n                      Lihat Hasil Analisis\r\n                      {uploadStatus.sensitiveFiles.includes(file.name) && \r\n                        <span className=\"sensitive-badge\">Sensitif</span>\r\n                      }\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Status section */}\r\n      {(isUploading || isAnalyzing || uploadStatus.analyzed) && (\r\n        <div className=\"status-container\">\r\n          <h3>Status:</h3>\r\n          <p>{isUploading ? \"Mengupload file...\" : \r\n              isAnalyzing ? \"Menganalisis file dengan AI...\" : \r\n              uploadStatus.analyzed ? `Analisis selesai. ${uploadStatus.sensitiveFiles.length} file berisi data sensitif.` : \r\n              uploadStatus.message}\r\n          </p>\r\n          \r\n          {uploadStatus.analyzed && uploadStatus.sensitiveFiles.length > 0 && (\r\n            <div className=\"sensitive-files-list\">\r\n              <h4>File dengan data sensitif:</h4>\r\n              <ul>\r\n                {uploadStatus.sensitiveFiles.map((filename, index) => (\r\n                  <li key={index}>{filename}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}