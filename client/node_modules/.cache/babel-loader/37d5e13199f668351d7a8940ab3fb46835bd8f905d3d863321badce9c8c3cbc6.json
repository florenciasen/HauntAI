{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\HauntAI\\\\client\\\\src\\\\pages\\\\HomePage\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [folderUploaded, setFolderUploaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState({\n    uploaded: false,\n    analyzed: false,\n    message: \"\",\n    analysisResults: []\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [fileProgress, setFileProgress] = useState({});\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\n\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      setSelectedFiles(Array.from(files));\n      setFileUploaded(true);\n      setFolderUploaded(false);\n    }\n  };\n  const handleUploadToBackend = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Tidak ada file yang dipilih.\");\n      return;\n    }\n    setIsUploading(true);\n    const sessionId = Date.now().toString();\n    try {\n      for (const file of selectedFiles) {\n        let start = 0;\n        while (start < file.size) {\n          const chunk = file.slice(start, start + CHUNK_SIZE);\n          await uploadChunk(file, start, chunk, sessionId);\n          start += CHUNK_SIZE;\n        }\n        setFileProgress(prev => ({\n          ...prev,\n          [file.name]: 100\n        }));\n      }\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId,\n          files: selectedFiles.map(f => ({\n            filename: f.name,\n            size: f.size\n          }))\n        })\n      });\n      if (!finalizeResponse.ok) {\n        throw new Error(\"Failed to finalize upload\");\n      }\n      const result = await finalizeResponse.json();\n      setUploadStatus({\n        uploaded: true,\n        analyzed: false,\n        message: result.message\n      });\n      setIsAnalyzing(true);\n      await analyzeFiles(result.saved_files);\n    } catch (error) {\n      alert(\"Terjadi kesalahan saat mengupload file.\");\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const analyzeFiles = async filePaths => {\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          file_paths: filePaths\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to analyze files\");\n      }\n      const result = await response.json();\n      setUploadStatus({\n        uploaded: true,\n        analyzed: true,\n        message: result.message,\n        analysisResults: result.upload_status.sensitive_data_files\n      });\n    } catch (error) {\n      alert(\"Terjadi kesalahan saat menganalisis file.\");\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: \"HauntAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadToBackend,\n        children: isUploading ? \"Uploading...\" : \"Upload & Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), uploadStatus.analyzed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hasil Analisis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadStatus.analysisResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"k3cFENPNQ6l6LnhlcT+TJKQlZnc=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HomePage","_s","fileUploaded","setFileUploaded","folderUploaded","setFolderUploaded","selectedFiles","setSelectedFiles","uploadStatus","setUploadStatus","uploaded","analyzed","message","analysisResults","isUploading","setIsUploading","isAnalyzing","setIsAnalyzing","fileProgress","setFileProgress","CHUNK_SIZE","handleFileUpload","event","files","target","length","Array","from","handleUploadToBackend","alert","sessionId","Date","now","toString","file","start","size","chunk","slice","uploadChunk","prev","name","finalizeResponse","fetch","method","headers","body","JSON","stringify","map","f","filename","ok","Error","result","json","analyzeFiles","saved_files","error","filePaths","response","file_paths","upload_status","sensitive_data_files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","onClick","index","_c","$RefreshReg$"],"sources":["C:/Users/flore/OneDrive/Dokumen/GitHub/HauntAI/client/src/pages/HomePage/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nexport default function HomePage() {\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [folderUploaded, setFolderUploaded] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    uploaded: false,\r\n    analyzed: false,\r\n    message: \"\",\r\n    analysisResults: [],\r\n  });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [fileProgress, setFileProgress] = useState({});\r\n\r\n  const CHUNK_SIZE = 1024 * 1024 * 500; // 500MB\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    if (files.length > 0) {\r\n      setSelectedFiles(Array.from(files));\r\n      setFileUploaded(true);\r\n      setFolderUploaded(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadToBackend = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      alert(\"Tidak ada file yang dipilih.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const sessionId = Date.now().toString();\r\n    try {\r\n      for (const file of selectedFiles) {\r\n        let start = 0;\r\n        while (start < file.size) {\r\n          const chunk = file.slice(start, start + CHUNK_SIZE);\r\n          await uploadChunk(file, start, chunk, sessionId);\r\n          start += CHUNK_SIZE;\r\n        }\r\n        setFileProgress((prev) => ({ ...prev, [file.name]: 100 }));\r\n      }\r\n\r\n      const finalizeResponse = await fetch(\"http://localhost:5000/finalize-upload\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ sessionId, files: selectedFiles.map(f => ({ filename: f.name, size: f.size })) }),\r\n      });\r\n\r\n      if (!finalizeResponse.ok) {\r\n        throw new Error(\"Failed to finalize upload\");\r\n      }\r\n\r\n      const result = await finalizeResponse.json();\r\n      setUploadStatus({ uploaded: true, analyzed: false, message: result.message });\r\n      setIsAnalyzing(true);\r\n      await analyzeFiles(result.saved_files);\r\n    } catch (error) {\r\n      alert(\"Terjadi kesalahan saat mengupload file.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const analyzeFiles = async (filePaths) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ file_paths: filePaths }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to analyze files\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      setUploadStatus({\r\n        uploaded: true,\r\n        analyzed: true,\r\n        message: result.message,\r\n        analysisResults: result.upload_status.sensitive_data_files,\r\n      });\r\n    } catch (error) {\r\n      alert(\"Terjadi kesalahan saat menganalisis file.\");\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-homepage\">\r\n      <nav className=\"navbar\">HauntAI</nav>\r\n      <div className=\"upload-container\">\r\n        <h2>Upload File</h2>\r\n        <input type=\"file\" multiple onChange={handleFileUpload} />\r\n        <button onClick={handleUploadToBackend}>{isUploading ? \"Uploading...\" : \"Upload & Analyze\"}</button>\r\n      </div>\r\n\r\n      {uploadStatus.analyzed && (\r\n        <div className=\"analysis-results-container\">\r\n          <h3>Hasil Analisis</h3>\r\n          <ul>\r\n            {uploadStatus.analysisResults.map((result, index) => (\r\n              <li key={index}>{result}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}